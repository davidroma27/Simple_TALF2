No terminales inútiles en la gramática

   instruccion_casos
   caso
   entradas
   entrada
   instruccion_interrupcion
   cuando
   expresion_potencia


Terminales no usados en la gramática

   OR
   AND
   NEG
   LEQ
   GEQ
   EQ
   NEQ
   DESPI
   DESPD
   '/'
   '\\'
   INC
   DEC
   MENOS_UNARIO
   CASOS
   CUANDO
   ENTERO
   OBJETO
   OTRO
   REAL
   SALIR
   SIGUIENTE
   DOS_PUNTOS
   CUATRO_PUNTOS
   ASIGNACION
   FLECHA
   ASIG_SUMA
   ASIG_RESTA
   tokenASIG_MULT
   ASIG_DIV
   ASIG_RESTO
   ASIG_POT
   ASIG_DESPI
   ASIG_DESPD


Reglas inútiles en la gramática

  150 instruccion: instruccion_casos
  151            | instruccion_interrupcion

  152 instruccion_casos: CASOS expresion ES '[' caso ']' '+' FIN CASOS

  153 caso: cuando entradas "=>" '[' instruccion ']' '+'

  154 entradas: '[' entrada ':' ']' '*' entrada

  155 entrada: expresion '[' ".." expresion ']' '?'
  156        | OTRO

  157 instruccion_interrupcion: SIGUIENTE '[' cuando ']' '?' ';'
  158                         | SALIR '[' DE IDENTIFICADOR ']' '?' '[' cuando ']' '?'

  159 cuando: cuando expresion

  160 expresion: expresion_potencia

  161 expresion_potencia: expresion_posfija '[' '^' expresion_potencia ']' '?'


La regla es inútil debido a los conflictos

  145 campo_valor: IDENTIFICADOR "=>" expresion
  146            | IDENTIFICADOR "=>" expresion

  147 expresion_condicional: expresion
  148                      | SI expresion ENTONCES expresion '[' SINO expresion ']' '?'


Estado 124 conflictos: 2 desplazamiento/reducción, 2 reducción/reducción
Estado 127 conflictos: 1 desplazamiento/reducción
Estado 156 conflictos: 2 desplazamiento/reducción, 2 reducción/reducción
Estado 167 conflictos: 2 desplazamiento/reducción, 2 reducción/reducción
Estado 211 conflictos: 2 desplazamiento/reducción, 2 reducción/reducción
Estado 222 conflictos: 2 desplazamiento/reducción, 2 reducción/reducción
Estado 231 conflictos: 1 desplazamiento/reducción, 2 reducción/reducción
Estado 240 conflictos: 1 desplazamiento/reducción, 1 reducción/reducción
Estado 246 conflictos: 2 desplazamiento/reducción, 2 reducción/reducción
Estado 247 conflictos: 2 desplazamiento/reducción, 2 reducción/reducción
Estado 255 conflictos: 2 desplazamiento/reducción, 2 reducción/reducción
Estado 278 conflictos: 1 desplazamiento/reducción
Estado 280 conflictos: 1 desplazamiento/reducción, 6 reducción/reducción
Estado 306 conflictos: 1 desplazamiento/reducción, 1 reducción/reducción
Estado 308 conflictos: 1 desplazamiento/reducción
Estado 309 conflictos: 2 desplazamiento/reducción, 2 reducción/reducción
Estado 336 conflictos: 2 desplazamiento/reducción, 2 reducción/reducción
Estado 337 conflictos: 2 desplazamiento/reducción, 2 reducción/reducción
Estado 351 conflictos: 1 desplazamiento/reducción, 2 reducción/reducción
Estado 387 conflictos: 2 desplazamiento/reducción, 2 reducción/reducción
Estado 389 conflictos: 2 desplazamiento/reducción, 2 reducción/reducción
Estado 390 conflictos: 6 reducción/reducción
Estado 395 conflictos: 1 desplazamiento/reducción, 2 reducción/reducción
Estado 407 conflictos: 1 desplazamiento/reducción, 2 reducción/reducción
Estado 423 conflictos: 2 desplazamiento/reducción, 2 reducción/reducción
Estado 451 conflictos: 1 desplazamiento/reducción, 1 reducción/reducción
Estado 458 conflictos: 2 desplazamiento/reducción, 2 reducción/reducción
Estado 482 conflictos: 1 desplazamiento/reducción, 2 reducción/reducción
Estado 486 conflictos: 2 desplazamiento/reducción, 2 reducción/reducción


Gramática

    0 $accept: programa $end

    1 programa: definicion_programa
    2         | definicion_libreria

    3 definicion_programa: PROGRAMA IDENTIFICADOR ';' codigo_programa FIN
    4                    | error PROGRAMA

    5 codigo_programa: '[' libreria ']' '*' cuerpo_subprograma

    6 libreria: IMPORTAR LIBRERIA nombre '[' COMO IDENTIFICADOR ']' '?' ';'
    7         | DE LIBRERIA nombre IMPORTAR '(' IDENTIFICADOR ')' '+'

    8 nombre: '[' IDENTIFICADOR "::" ']' '*' IDENTIFICADOR

    9 definicion_libreria: LIBRERIA IDENTIFICADOR ';' codigo_libreria

   10 codigo_libreria: '[' libreria ']' '*' '[' exportaciones ']' '?' '[' declaracion ']' '+'

   11 exportaciones: EXPORTAR '(' nombre ')' '+'

   12 declaracion: declaracion_objeto
   13            | declaracion_tipo
   14            | declaracion_subprograma

   15 declaracion_objeto: '(' IDENTIFICADOR ')' '+' ':' CONSTANTE especificacion_tipo ":=" expresion ';'
   16                   | '(' IDENTIFICADOR ')' '+' ':' especificacion_tipo '[' ":=" expresion ']' '?'

   17 especificacion_tipo: nombre
   18                    | tipo_no_estructurado

   19 declaracion_tipo: TIPO IDENTIFICADOR ES tipo_no_estructurado ';'
   20                 | TIPO IDENTIFICADOR ES tipo_estructurado

   21 tipo_no_estructurado: tipo_escalar
   22                     | tipo_tabla
   23                     | tipo_diccionario

   24 tipo_escalar: '[' SIGNO ']' '?' tipo_basico '[' longitud ']' '?' '[' RANGO rango ']' '?'

   25 longitud: CORTO
   26         | LARGO

   27 tipo_basico: BOOLEANO
   28            | CTC_CARACTER
   29            | CTC_ENTERA
   30            | CTC_REAL

   31 rango: expresion ".." expresion '[' ".." expresion ']' '?'

   32 tipo_tabla: TABLA '(' expresion ".." expresion ')' DE especificacion_tipo
   33           | LISTA DE especificacion_tipo

   34 tipo_diccionario: DICCIONARIO DE especificacion_tipo

   35 tipo_estructurado: tipo_registro
   36                  | tipo_enumerado
   37                  | clase

   38 tipo_registro: REGISTRO '[' campo ']' '+' FIN REGISTRO

   39 campo: '(' IDENTIFICADOR ')' '+' ':' especificacion_tipo '[' ":=" expresion ']' '?'

   40 tipo_enumerado: ENUMERACION '[' DE tipo_escalar ']' '?' '(' elemento_enumeracion ')' '+' FIN ENUMERACION

   41 elemento_enumeracion: IDENTIFICADOR '[' ":=" expresion ']' '?'

   42 clase: CLASE '[' ULTIMA ']' '?' '[' superclases ']' '?' '[' declaracion_componente ']' '+' FIN CLASE

   43 superclases: '(' '(' nombre ')' '+' ')'

   44 declaracion_componente: '[' visibilidad ']' '?' componente

   45 visibilidad: PUBLICO
   46            | PROTEGIDO
   47            | PRIVADO

   48 componente: declaracion_tipo
   49           | declaracion_objeto
   50           | '(' modificador ')' '*' declaracion_subprograma

   51 modificador: CONSTRUCTOR
   52            | DESTRUCTOR
   53            | GENERICO
   54            | ABSTRACTO
   55            | ESPECIFICO
   56            | FINAL

   57 declaracion_subprograma: SUBPROGRAMA cabecera_subprograma cuerpo_subprograma SUBPROGRAMA

   58 cabecera_subprograma: IDENTIFICADOR '[' parametrizacion ']' '?' '[' tipo_resultado ']' '?'

   59 parametrizacion: '(' '[' declaracion_parametros ';' ']' '*' declaracion_parametros ')'

   60 declaracion_parametros: '(' IDENTIFICADOR ')' '+' ':' '[' modo ']' '?' especificacion_tipo '[' ":=" expresion ']' '?'

   61 modo: VALOR
   62     | REFERENCIA

   63 tipo_resultado: DEVOLVER especificacion_tipo

   64 cuerpo_subprograma: '[' declaracion ']' '*' PRINCIPIO '[' instruccion ']' '+' FIN

   65 instruccion: instruccion_asignacion
   66            | instruccion_devolver
   67            | instruccion_llamada
   68            | instruccion_si
   69            | instruccion_bucle
   70            | instruccion_lanzamiento_excepcion
   71            | instruccion_captura_excepcion

   72 instruccion_asignacion: objeto op_asignacion expresion

   73 op_asignacion: ":="
   74              | ":+"
   75              | ":-"
   76              | ":*"
   77              | ":/"
   78              | ":\\"
   79              | ":^"
   80              | ":<"
   81              | ":>"

   82 instruccion_devolver: DEVOLVER '[' expresion ']' '?'

   83 instruccion_llamada: llamada_subprograma

   84 llamada_subprograma: nombre '(' '(' definicion_parametro ')' '*' ')'

   85 definicion_parametro: '[' IDENTIFICADOR ":=" ']' '?' expresion

   86 instruccion_si: SI expresion ENTONCES '[' instruccion ']' '+' '[' SINO '[' instruccion ']' '+' ']' '?' FIN SI

   87 instruccion_bucle: '[' IDENTIFICADOR ':' ']' '?' clausula_iteracion '[' instruccion ']' '+' FIN BUCLE

   88 clausula_iteracion: PARA IDENTIFICADOR '[' ':' especificacion_tipo ']' '?' EN expresion
   89                   | REPETIR IDENTIFICADOR '[' ':' especificacion_tipo ']' '?' EN RANGO '[' DESCENDENTE ']' '?'
   90                   | MIENTRAS expresion

   91 instruccion_lanzamiento_excepcion: LANZA nombre

   92 instruccion_captura_excepcion: PRUEBA '[' instruccion ']' '+' clausulas FIN PRUEBA

   93 clausulas: clausulas_excepcion '[' clausula_finalmente ']' '?'
   94          | clausula_finalmente

   95 clausulas_excepcion: '[' clausula_excepcion_especifica ']' '*' clausula_excepcion_general

   96 clausula_excepcion_especifica: EXCEPCION '(' nombre ')' '[' instruccion ']' '+'

   97 clausula_excepcion_general: EXCEPCION '[' instruccion ']' '+'

   98 clausula_finalmente: FINALMENTE '[' instruccion ']' '+'

   99 expresion: expresion_posfija
  100          | expresion_binaria
  101          | expresion_unaria
  102          | expresion_condicional

  103 expresion_posfija: expresion_unaria '[' operador_posfijo ']' '?'

  104 expresion_binaria: expresion '[' op_binario ']' expresion

  105 operador_posfijo: "++"
  106                 | "--"

  107 op_binario: "\\/"
  108           | "/\\"
  109           | '<'
  110           | '>'
  111           | "<="
  112           | ">="
  113           | '='
  114           | "~="
  115           | "<-"
  116           | "->"
  117           | '+'
  118           | '-'
  119           | '*'
  120           | "/"
  121           | "\\"
  122           | '^'

  123 expresion_unaria: '[' '-' ']' '?' primario

  124 primario: literal
  125         | objeto
  126         | '[' objeto ']' '?' llamada_subprograma
  127         | enumeraciones
  128         | '(' expresion ')'

  129 literal: VERDADERO
  130        | FALSO
  131        | CTC_ENTERA
  132        | CTC_REAL
  133        | CTC_CARACTER
  134        | CTC_CADENA

  135 objeto: nombre
  136       | objeto '.' IDENTIFICADOR
  137       | objeto '[' '(' expresion ')' '+' ']'
  138       | objeto '{' '(' CTC_CADENA ')' '+' '}'

  139 enumeraciones: '[' expresion_condicional '[' clausula_iteracion ']' '+' ']'
  140              | '[' '(' expresion ')' '+' ']'
  141              | '{' '(' clave_valor ')' '+' '}'
  142              | '{' '(' campo_valor ')' '+' '}'

  143 expresion_condicional: expresion
  144                      | SI expresion ENTONCES expresion '[' SINO expresion ']' '?'

  145 campo_valor: IDENTIFICADOR "=>" expresion
  146            | IDENTIFICADOR "=>" expresion

  147 expresion_condicional: expresion
  148                      | SI expresion ENTONCES expresion '[' SINO expresion ']' '?'

  149 clave_valor: %empty


Terminales con las reglas donde aparecen

$end (0) 0
'(' (40) 7 11 15 16 32 39 40 43 50 59 60 84 96 128 137 138 140 141
    142
')' (41) 7 11 15 16 32 39 40 43 50 59 60 84 96 128 137 138 140 141
    142
'*' (42) 5 8 10 50 59 64 84 95 119
'+' (43) 7 10 11 15 16 38 39 40 42 43 60 64 86 87 92 96 97 98 117 137
    138 139 140 141 142
'-' (45) 118 123
'.' (46) 136
'/' (47)
':' (58) 15 16 39 60 87 88 89
';' (59) 3 6 9 15 19 59
'<' (60) 109
'=' (61) 113
'>' (62) 110
'?' (63) 6 10 16 24 31 39 40 41 42 44 58 60 82 85 86 87 88 89 93 103
    123 126 144 148
'[' (91) 5 6 8 10 16 24 31 38 39 40 41 42 44 58 59 60 64 82 85 86 87
    88 89 92 93 95 96 97 98 103 104 123 126 137 139 140 144 148
'\\' (92)
']' (93) 5 6 8 10 16 24 31 38 39 40 41 42 44 58 59 60 64 82 85 86 87
    88 89 92 93 95 96 97 98 103 104 123 126 137 139 140 144 148
'^' (94) 122
'{' (123) 138 141 142
'}' (125) 138 141 142
error (256) 4
OR (258)
AND (259)
NEG (260)
LEQ (261)
GEQ (262)
EQ (263)
NEQ (264)
DESPI (265)
DESPD (266)
INC (267)
DEC (268)
MENOS_UNARIO (269)
ABSTRACTO (270) 54
BOOLEANO (271) 27
BUCLE (272) 87
CASOS (273)
CLASE (274) 42
COMO (275) 6
CONSTANTE (276) 15
CONSTRUCTOR (277) 51
CORTO (278) 25
CUANDO (279)
DE (280) 7 32 33 34 40
DESCENDENTE (281) 89
DESTRUCTOR (282) 52
DEVOLVER (283) 63 82
DICCIONARIO (284) 34
EN (285) 88 89
ENTERO (286)
ENTONCES (287) 86 144 148
ENUMERACION (288) 40
ES (289) 19 20
ESPECIFICO (290) 55
EXCEPCION (291) 96 97
EXPORTAR (292) 11
FALSO (293) 130
FIN (294) 3 38 40 42 64 86 87 92
FINAL (295) 56
FINALMENTE (296) 98
GENERICO (297) 53
IMPORTAR (298) 6 7
LARGO (299) 26
LANZA (300) 91
LIBRERIA (301) 6 7 9
LISTA (302) 33
MIENTRAS (303) 90
OBJETO (304)
OTRO (305)
PARA (306) 88
PRINCIPIO (307) 64
PRIVADO (308) 47
PROGRAMA (309) 3 4
PROTEGIDO (310) 46
PRUEBA (311) 92
PUBLICO (312) 45
RANGO (313) 24 89
REAL (314)
REFERENCIA (315) 62
REGISTRO (316) 38
REPETIR (317) 89
SALIR (318)
SI (319) 86 144 148
SIGNO (320) 24
SIGUIENTE (321)
SINO (322) 86 144 148
SUBPROGRAMA (323) 57
TABLA (324) 32
TIPO (325) 19 20
ULTIMA (326) 42
VALOR (327) 61
VERDADERO (328) 129
CTC_CADENA (329) 134 138
IDENTIFICADOR (330) 3 6 7 8 9 15 16 19 20 39 41 58 60 85 87 88 89 136
    145 146
CTC_CARACTER (331) 28 133
CTC_ENTERA (332) 29 131
CTC_REAL (333) 30 132
DOS_PUNTOS (334)
CUATRO_PUNTOS (335)
ASIGNACION (336)
FLECHA (337)
ASIG_SUMA (338)
ASIG_RESTA (339)
tokenASIG_MULT (340)
ASIG_DIV (341)
ASIG_RESTO (342)
ASIG_POT (343)
ASIG_DESPI (344)
ASIG_DESPD (345)
"::" (346) 8
":=" (347) 15 16 39 41 60 73 85
".." (348) 31 32
":+" (349) 74
":-" (350) 75
":*" (351) 76
":/" (352) 77
":\\" (353) 78
":^" (354) 79
":<" (355) 80
":>" (356) 81
"=>" (357) 145 146
"++" (358) 105
"--" (359) 106
"\\/" (360) 107
"/\\" (361) 108
"<=" (362) 111
">=" (363) 112
"~=" (364) 114
"<-" (365) 115
"->" (366) 116
"/" (367) 120
"\\" (368) 121


No terminales con las reglas donde aparecen

$accept (133)
    en la izquierda: 0
programa (134)
    en la izquierda: 1 2, en la derecha: 0
definicion_programa (135)
    en la izquierda: 3 4, en la derecha: 1
codigo_programa (136)
    en la izquierda: 5, en la derecha: 3
libreria (137)
    en la izquierda: 6 7, en la derecha: 5 10
nombre (138)
    en la izquierda: 8, en la derecha: 6 7 11 17 43 84 91 96 135
definicion_libreria (139)
    en la izquierda: 9, en la derecha: 2
codigo_libreria (140)
    en la izquierda: 10, en la derecha: 9
exportaciones (141)
    en la izquierda: 11, en la derecha: 10
declaracion (142)
    en la izquierda: 12 13 14, en la derecha: 10 64
declaracion_objeto (143)
    en la izquierda: 15 16, en la derecha: 12 49
especificacion_tipo (144)
    en la izquierda: 17 18, en la derecha: 15 16 32 33 34 39 60 63
    88 89
declaracion_tipo (145)
    en la izquierda: 19 20, en la derecha: 13 48
tipo_no_estructurado (146)
    en la izquierda: 21 22 23, en la derecha: 18 19
tipo_escalar (147)
    en la izquierda: 24, en la derecha: 21 40
longitud (148)
    en la izquierda: 25 26, en la derecha: 24
tipo_basico (149)
    en la izquierda: 27 28 29 30, en la derecha: 24
rango (150)
    en la izquierda: 31, en la derecha: 24
tipo_tabla (151)
    en la izquierda: 32 33, en la derecha: 22
tipo_diccionario (152)
    en la izquierda: 34, en la derecha: 23
tipo_estructurado (153)
    en la izquierda: 35 36 37, en la derecha: 20
tipo_registro (154)
    en la izquierda: 38, en la derecha: 35
campo (155)
    en la izquierda: 39, en la derecha: 38
tipo_enumerado (156)
    en la izquierda: 40, en la derecha: 36
elemento_enumeracion (157)
    en la izquierda: 41, en la derecha: 40
clase (158)
    en la izquierda: 42, en la derecha: 37
superclases (159)
    en la izquierda: 43, en la derecha: 42
declaracion_componente (160)
    en la izquierda: 44, en la derecha: 42
visibilidad (161)
    en la izquierda: 45 46 47, en la derecha: 44
componente (162)
    en la izquierda: 48 49 50, en la derecha: 44
modificador (163)
    en la izquierda: 51 52 53 54 55 56, en la derecha: 50
declaracion_subprograma (164)
    en la izquierda: 57, en la derecha: 14 50
cabecera_subprograma (165)
    en la izquierda: 58, en la derecha: 57
parametrizacion (166)
    en la izquierda: 59, en la derecha: 58
declaracion_parametros (167)
    en la izquierda: 60, en la derecha: 59
modo (168)
    en la izquierda: 61 62, en la derecha: 60
tipo_resultado (169)
    en la izquierda: 63, en la derecha: 58
cuerpo_subprograma (170)
    en la izquierda: 64, en la derecha: 5 57
instruccion (171)
    en la izquierda: 65 66 67 68 69 70 71, en la derecha: 64 86 87
    92 96 97 98
instruccion_asignacion (172)
    en la izquierda: 72, en la derecha: 65
op_asignacion (173)
    en la izquierda: 73 74 75 76 77 78 79 80 81, en la derecha: 72
instruccion_devolver (174)
    en la izquierda: 82, en la derecha: 66
instruccion_llamada (175)
    en la izquierda: 83, en la derecha: 67
llamada_subprograma (176)
    en la izquierda: 84, en la derecha: 83 126
definicion_parametro (177)
    en la izquierda: 85, en la derecha: 84
instruccion_si (178)
    en la izquierda: 86, en la derecha: 68
instruccion_bucle (179)
    en la izquierda: 87, en la derecha: 69
clausula_iteracion (180)
    en la izquierda: 88 89 90, en la derecha: 87 139
instruccion_lanzamiento_excepcion (181)
    en la izquierda: 91, en la derecha: 70
instruccion_captura_excepcion (182)
    en la izquierda: 92, en la derecha: 71
clausulas (183)
    en la izquierda: 93 94, en la derecha: 92
clausulas_excepcion (184)
    en la izquierda: 95, en la derecha: 93
clausula_excepcion_especifica (185)
    en la izquierda: 96, en la derecha: 95
clausula_excepcion_general (186)
    en la izquierda: 97, en la derecha: 95
clausula_finalmente (187)
    en la izquierda: 98, en la derecha: 93 94
expresion (188)
    en la izquierda: 99 100 101 102, en la derecha: 15 16 31 32 39
    41 60 72 82 85 86 88 90 104 128 137 140 143 144 145 146 147 148
expresion_posfija (189)
    en la izquierda: 103, en la derecha: 99
expresion_binaria (190)
    en la izquierda: 104, en la derecha: 100
operador_posfijo (191)
    en la izquierda: 105 106, en la derecha: 103
op_binario (192)
    en la izquierda: 107 108 109 110 111 112 113 114 115 116 117 118
    119 120 121 122, en la derecha: 104
expresion_unaria (193)
    en la izquierda: 123, en la derecha: 101 103
primario (194)
    en la izquierda: 124 125 126 127 128, en la derecha: 123
literal (195)
    en la izquierda: 129 130 131 132 133 134, en la derecha: 124
objeto (196)
    en la izquierda: 135 136 137 138, en la derecha: 72 125 126 136
    137 138
enumeraciones (197)
    en la izquierda: 139 140 141 142, en la derecha: 127
expresion_condicional (198)
    en la izquierda: 143 144 147 148, en la derecha: 102 139
campo_valor (199)
    en la izquierda: 145 146, en la derecha: 142
clave_valor (200)
    en la izquierda: 149, en la derecha: 141


Estado 0

    0 $accept: . programa $end

    error     desplazar e ir al estado 1
    LIBRERIA  desplazar e ir al estado 2
    PROGRAMA  desplazar e ir al estado 3

    programa             ir al estado 4
    definicion_programa  ir al estado 5
    definicion_libreria  ir al estado 6


Estado 1

    4 definicion_programa: error . PROGRAMA

    PROGRAMA  desplazar e ir al estado 7


Estado 2

    9 definicion_libreria: LIBRERIA . IDENTIFICADOR ';' codigo_libreria

    IDENTIFICADOR  desplazar e ir al estado 8


Estado 3

    3 definicion_programa: PROGRAMA . IDENTIFICADOR ';' codigo_programa FIN

    IDENTIFICADOR  desplazar e ir al estado 9


Estado 4

    0 $accept: programa . $end

    $end  desplazar e ir al estado 10


Estado 5

    1 programa: definicion_programa .

    $default  reduce usando la regla 1 (programa)


Estado 6

    2 programa: definicion_libreria .

    $default  reduce usando la regla 2 (programa)


Estado 7

    4 definicion_programa: error PROGRAMA .

    $default  reduce usando la regla 4 (definicion_programa)


Estado 8

    9 definicion_libreria: LIBRERIA IDENTIFICADOR . ';' codigo_libreria

    ';'  desplazar e ir al estado 11


Estado 9

    3 definicion_programa: PROGRAMA IDENTIFICADOR . ';' codigo_programa FIN

    ';'  desplazar e ir al estado 12


Estado 10

    0 $accept: programa $end .

    $default  aceptar


Estado 11

    9 definicion_libreria: LIBRERIA IDENTIFICADOR ';' . codigo_libreria

    '['  desplazar e ir al estado 13

    codigo_libreria  ir al estado 14


Estado 12

    3 definicion_programa: PROGRAMA IDENTIFICADOR ';' . codigo_programa FIN

    '['  desplazar e ir al estado 15

    codigo_programa  ir al estado 16


Estado 13

   10 codigo_libreria: '[' . libreria ']' '*' '[' exportaciones ']' '?' '[' declaracion ']' '+'

    DE        desplazar e ir al estado 17
    IMPORTAR  desplazar e ir al estado 18

    libreria  ir al estado 19


Estado 14

    9 definicion_libreria: LIBRERIA IDENTIFICADOR ';' codigo_libreria .

    $default  reduce usando la regla 9 (definicion_libreria)


Estado 15

    5 codigo_programa: '[' . libreria ']' '*' cuerpo_subprograma

    DE        desplazar e ir al estado 17
    IMPORTAR  desplazar e ir al estado 18

    libreria  ir al estado 20


Estado 16

    3 definicion_programa: PROGRAMA IDENTIFICADOR ';' codigo_programa . FIN

    FIN  desplazar e ir al estado 21


Estado 17

    7 libreria: DE . LIBRERIA nombre IMPORTAR '(' IDENTIFICADOR ')' '+'

    LIBRERIA  desplazar e ir al estado 22


Estado 18

    6 libreria: IMPORTAR . LIBRERIA nombre '[' COMO IDENTIFICADOR ']' '?' ';'

    LIBRERIA  desplazar e ir al estado 23


Estado 19

   10 codigo_libreria: '[' libreria . ']' '*' '[' exportaciones ']' '?' '[' declaracion ']' '+'

    ']'  desplazar e ir al estado 24


Estado 20

    5 codigo_programa: '[' libreria . ']' '*' cuerpo_subprograma

    ']'  desplazar e ir al estado 25


Estado 21

    3 definicion_programa: PROGRAMA IDENTIFICADOR ';' codigo_programa FIN .

    $default  reduce usando la regla 3 (definicion_programa)


Estado 22

    7 libreria: DE LIBRERIA . nombre IMPORTAR '(' IDENTIFICADOR ')' '+'

    '['  desplazar e ir al estado 26

    nombre  ir al estado 27


Estado 23

    6 libreria: IMPORTAR LIBRERIA . nombre '[' COMO IDENTIFICADOR ']' '?' ';'

    '['  desplazar e ir al estado 26

    nombre  ir al estado 28


Estado 24

   10 codigo_libreria: '[' libreria ']' . '*' '[' exportaciones ']' '?' '[' declaracion ']' '+'

    '*'  desplazar e ir al estado 29


Estado 25

    5 codigo_programa: '[' libreria ']' . '*' cuerpo_subprograma

    '*'  desplazar e ir al estado 30


Estado 26

    8 nombre: '[' . IDENTIFICADOR "::" ']' '*' IDENTIFICADOR

    IDENTIFICADOR  desplazar e ir al estado 31


Estado 27

    7 libreria: DE LIBRERIA nombre . IMPORTAR '(' IDENTIFICADOR ')' '+'

    IMPORTAR  desplazar e ir al estado 32


Estado 28

    6 libreria: IMPORTAR LIBRERIA nombre . '[' COMO IDENTIFICADOR ']' '?' ';'

    '['  desplazar e ir al estado 33


Estado 29

   10 codigo_libreria: '[' libreria ']' '*' . '[' exportaciones ']' '?' '[' declaracion ']' '+'

    '['  desplazar e ir al estado 34


Estado 30

    5 codigo_programa: '[' libreria ']' '*' . cuerpo_subprograma

    '['  desplazar e ir al estado 35

    cuerpo_subprograma  ir al estado 36


Estado 31

    8 nombre: '[' IDENTIFICADOR . "::" ']' '*' IDENTIFICADOR

    "::"  desplazar e ir al estado 37


Estado 32

    7 libreria: DE LIBRERIA nombre IMPORTAR . '(' IDENTIFICADOR ')' '+'

    '('  desplazar e ir al estado 38


Estado 33

    6 libreria: IMPORTAR LIBRERIA nombre '[' . COMO IDENTIFICADOR ']' '?' ';'

    COMO  desplazar e ir al estado 39


Estado 34

   10 codigo_libreria: '[' libreria ']' '*' '[' . exportaciones ']' '?' '[' declaracion ']' '+'

    EXPORTAR  desplazar e ir al estado 40

    exportaciones  ir al estado 41


Estado 35

   64 cuerpo_subprograma: '[' . declaracion ']' '*' PRINCIPIO '[' instruccion ']' '+' FIN

    SUBPROGRAMA  desplazar e ir al estado 42
    TIPO         desplazar e ir al estado 43
    '('          desplazar e ir al estado 44

    declaracion              ir al estado 45
    declaracion_objeto       ir al estado 46
    declaracion_tipo         ir al estado 47
    declaracion_subprograma  ir al estado 48


Estado 36

    5 codigo_programa: '[' libreria ']' '*' cuerpo_subprograma .

    $default  reduce usando la regla 5 (codigo_programa)


Estado 37

    8 nombre: '[' IDENTIFICADOR "::" . ']' '*' IDENTIFICADOR

    ']'  desplazar e ir al estado 49


Estado 38

    7 libreria: DE LIBRERIA nombre IMPORTAR '(' . IDENTIFICADOR ')' '+'

    IDENTIFICADOR  desplazar e ir al estado 50


Estado 39

    6 libreria: IMPORTAR LIBRERIA nombre '[' COMO . IDENTIFICADOR ']' '?' ';'

    IDENTIFICADOR  desplazar e ir al estado 51


Estado 40

   11 exportaciones: EXPORTAR . '(' nombre ')' '+'

    '('  desplazar e ir al estado 52


Estado 41

   10 codigo_libreria: '[' libreria ']' '*' '[' exportaciones . ']' '?' '[' declaracion ']' '+'

    ']'  desplazar e ir al estado 53


Estado 42

   57 declaracion_subprograma: SUBPROGRAMA . cabecera_subprograma cuerpo_subprograma SUBPROGRAMA

    IDENTIFICADOR  desplazar e ir al estado 54

    cabecera_subprograma  ir al estado 55


Estado 43

   19 declaracion_tipo: TIPO . IDENTIFICADOR ES tipo_no_estructurado ';'
   20                 | TIPO . IDENTIFICADOR ES tipo_estructurado

    IDENTIFICADOR  desplazar e ir al estado 56


Estado 44

   15 declaracion_objeto: '(' . IDENTIFICADOR ')' '+' ':' CONSTANTE especificacion_tipo ":=" expresion ';'
   16                   | '(' . IDENTIFICADOR ')' '+' ':' especificacion_tipo '[' ":=" expresion ']' '?'

    IDENTIFICADOR  desplazar e ir al estado 57


Estado 45

   64 cuerpo_subprograma: '[' declaracion . ']' '*' PRINCIPIO '[' instruccion ']' '+' FIN

    ']'  desplazar e ir al estado 58


Estado 46

   12 declaracion: declaracion_objeto .

    $default  reduce usando la regla 12 (declaracion)


Estado 47

   13 declaracion: declaracion_tipo .

    $default  reduce usando la regla 13 (declaracion)


Estado 48

   14 declaracion: declaracion_subprograma .

    $default  reduce usando la regla 14 (declaracion)


Estado 49

    8 nombre: '[' IDENTIFICADOR "::" ']' . '*' IDENTIFICADOR

    '*'  desplazar e ir al estado 59


Estado 50

    7 libreria: DE LIBRERIA nombre IMPORTAR '(' IDENTIFICADOR . ')' '+'

    ')'  desplazar e ir al estado 60


Estado 51

    6 libreria: IMPORTAR LIBRERIA nombre '[' COMO IDENTIFICADOR . ']' '?' ';'

    ']'  desplazar e ir al estado 61


Estado 52

   11 exportaciones: EXPORTAR '(' . nombre ')' '+'

    '['  desplazar e ir al estado 26

    nombre  ir al estado 62


Estado 53

   10 codigo_libreria: '[' libreria ']' '*' '[' exportaciones ']' . '?' '[' declaracion ']' '+'

    '?'  desplazar e ir al estado 63


Estado 54

   58 cabecera_subprograma: IDENTIFICADOR . '[' parametrizacion ']' '?' '[' tipo_resultado ']' '?'

    '['  desplazar e ir al estado 64


Estado 55

   57 declaracion_subprograma: SUBPROGRAMA cabecera_subprograma . cuerpo_subprograma SUBPROGRAMA

    '['  desplazar e ir al estado 35

    cuerpo_subprograma  ir al estado 65


Estado 56

   19 declaracion_tipo: TIPO IDENTIFICADOR . ES tipo_no_estructurado ';'
   20                 | TIPO IDENTIFICADOR . ES tipo_estructurado

    ES  desplazar e ir al estado 66


Estado 57

   15 declaracion_objeto: '(' IDENTIFICADOR . ')' '+' ':' CONSTANTE especificacion_tipo ":=" expresion ';'
   16                   | '(' IDENTIFICADOR . ')' '+' ':' especificacion_tipo '[' ":=" expresion ']' '?'

    ')'  desplazar e ir al estado 67


Estado 58

   64 cuerpo_subprograma: '[' declaracion ']' . '*' PRINCIPIO '[' instruccion ']' '+' FIN

    '*'  desplazar e ir al estado 68


Estado 59

    8 nombre: '[' IDENTIFICADOR "::" ']' '*' . IDENTIFICADOR

    IDENTIFICADOR  desplazar e ir al estado 69


Estado 60

    7 libreria: DE LIBRERIA nombre IMPORTAR '(' IDENTIFICADOR ')' . '+'

    '+'  desplazar e ir al estado 70


Estado 61

    6 libreria: IMPORTAR LIBRERIA nombre '[' COMO IDENTIFICADOR ']' . '?' ';'

    '?'  desplazar e ir al estado 71


Estado 62

   11 exportaciones: EXPORTAR '(' nombre . ')' '+'

    ')'  desplazar e ir al estado 72


Estado 63

   10 codigo_libreria: '[' libreria ']' '*' '[' exportaciones ']' '?' . '[' declaracion ']' '+'

    '['  desplazar e ir al estado 73


Estado 64

   58 cabecera_subprograma: IDENTIFICADOR '[' . parametrizacion ']' '?' '[' tipo_resultado ']' '?'

    '('  desplazar e ir al estado 74

    parametrizacion  ir al estado 75


Estado 65

   57 declaracion_subprograma: SUBPROGRAMA cabecera_subprograma cuerpo_subprograma . SUBPROGRAMA

    SUBPROGRAMA  desplazar e ir al estado 76


Estado 66

   19 declaracion_tipo: TIPO IDENTIFICADOR ES . tipo_no_estructurado ';'
   20                 | TIPO IDENTIFICADOR ES . tipo_estructurado

    CLASE        desplazar e ir al estado 77
    DICCIONARIO  desplazar e ir al estado 78
    ENUMERACION  desplazar e ir al estado 79
    LISTA        desplazar e ir al estado 80
    REGISTRO     desplazar e ir al estado 81
    TABLA        desplazar e ir al estado 82
    '['          desplazar e ir al estado 83

    tipo_no_estructurado  ir al estado 84
    tipo_escalar          ir al estado 85
    tipo_tabla            ir al estado 86
    tipo_diccionario      ir al estado 87
    tipo_estructurado     ir al estado 88
    tipo_registro         ir al estado 89
    tipo_enumerado        ir al estado 90
    clase                 ir al estado 91


Estado 67

   15 declaracion_objeto: '(' IDENTIFICADOR ')' . '+' ':' CONSTANTE especificacion_tipo ":=" expresion ';'
   16                   | '(' IDENTIFICADOR ')' . '+' ':' especificacion_tipo '[' ":=" expresion ']' '?'

    '+'  desplazar e ir al estado 92


Estado 68

   64 cuerpo_subprograma: '[' declaracion ']' '*' . PRINCIPIO '[' instruccion ']' '+' FIN

    PRINCIPIO  desplazar e ir al estado 93


Estado 69

    8 nombre: '[' IDENTIFICADOR "::" ']' '*' IDENTIFICADOR .

    $default  reduce usando la regla 8 (nombre)


Estado 70

    7 libreria: DE LIBRERIA nombre IMPORTAR '(' IDENTIFICADOR ')' '+' .

    $default  reduce usando la regla 7 (libreria)


Estado 71

    6 libreria: IMPORTAR LIBRERIA nombre '[' COMO IDENTIFICADOR ']' '?' . ';'

    ';'  desplazar e ir al estado 94


Estado 72

   11 exportaciones: EXPORTAR '(' nombre ')' . '+'

    '+'  desplazar e ir al estado 95


Estado 73

   10 codigo_libreria: '[' libreria ']' '*' '[' exportaciones ']' '?' '[' . declaracion ']' '+'

    SUBPROGRAMA  desplazar e ir al estado 42
    TIPO         desplazar e ir al estado 43
    '('          desplazar e ir al estado 44

    declaracion              ir al estado 96
    declaracion_objeto       ir al estado 46
    declaracion_tipo         ir al estado 47
    declaracion_subprograma  ir al estado 48


Estado 74

   59 parametrizacion: '(' . '[' declaracion_parametros ';' ']' '*' declaracion_parametros ')'

    '['  desplazar e ir al estado 97


Estado 75

   58 cabecera_subprograma: IDENTIFICADOR '[' parametrizacion . ']' '?' '[' tipo_resultado ']' '?'

    ']'  desplazar e ir al estado 98


Estado 76

   57 declaracion_subprograma: SUBPROGRAMA cabecera_subprograma cuerpo_subprograma SUBPROGRAMA .

    $default  reduce usando la regla 57 (declaracion_subprograma)


Estado 77

   42 clase: CLASE . '[' ULTIMA ']' '?' '[' superclases ']' '?' '[' declaracion_componente ']' '+' FIN CLASE

    '['  desplazar e ir al estado 99


Estado 78

   34 tipo_diccionario: DICCIONARIO . DE especificacion_tipo

    DE  desplazar e ir al estado 100


Estado 79

   40 tipo_enumerado: ENUMERACION . '[' DE tipo_escalar ']' '?' '(' elemento_enumeracion ')' '+' FIN ENUMERACION

    '['  desplazar e ir al estado 101


Estado 80

   33 tipo_tabla: LISTA . DE especificacion_tipo

    DE  desplazar e ir al estado 102


Estado 81

   38 tipo_registro: REGISTRO . '[' campo ']' '+' FIN REGISTRO

    '['  desplazar e ir al estado 103


Estado 82

   32 tipo_tabla: TABLA . '(' expresion ".." expresion ')' DE especificacion_tipo

    '('  desplazar e ir al estado 104


Estado 83

   24 tipo_escalar: '[' . SIGNO ']' '?' tipo_basico '[' longitud ']' '?' '[' RANGO rango ']' '?'

    SIGNO  desplazar e ir al estado 105


Estado 84

   19 declaracion_tipo: TIPO IDENTIFICADOR ES tipo_no_estructurado . ';'

    ';'  desplazar e ir al estado 106


Estado 85

   21 tipo_no_estructurado: tipo_escalar .

    $default  reduce usando la regla 21 (tipo_no_estructurado)


Estado 86

   22 tipo_no_estructurado: tipo_tabla .

    $default  reduce usando la regla 22 (tipo_no_estructurado)


Estado 87

   23 tipo_no_estructurado: tipo_diccionario .

    $default  reduce usando la regla 23 (tipo_no_estructurado)


Estado 88

   20 declaracion_tipo: TIPO IDENTIFICADOR ES tipo_estructurado .

    $default  reduce usando la regla 20 (declaracion_tipo)


Estado 89

   35 tipo_estructurado: tipo_registro .

    $default  reduce usando la regla 35 (tipo_estructurado)


Estado 90

   36 tipo_estructurado: tipo_enumerado .

    $default  reduce usando la regla 36 (tipo_estructurado)


Estado 91

   37 tipo_estructurado: clase .

    $default  reduce usando la regla 37 (tipo_estructurado)


Estado 92

   15 declaracion_objeto: '(' IDENTIFICADOR ')' '+' . ':' CONSTANTE especificacion_tipo ":=" expresion ';'
   16                   | '(' IDENTIFICADOR ')' '+' . ':' especificacion_tipo '[' ":=" expresion ']' '?'

    ':'  desplazar e ir al estado 107


Estado 93

   64 cuerpo_subprograma: '[' declaracion ']' '*' PRINCIPIO . '[' instruccion ']' '+' FIN

    '['  desplazar e ir al estado 108


Estado 94

    6 libreria: IMPORTAR LIBRERIA nombre '[' COMO IDENTIFICADOR ']' '?' ';' .

    $default  reduce usando la regla 6 (libreria)


Estado 95

   11 exportaciones: EXPORTAR '(' nombre ')' '+' .

    $default  reduce usando la regla 11 (exportaciones)


Estado 96

   10 codigo_libreria: '[' libreria ']' '*' '[' exportaciones ']' '?' '[' declaracion . ']' '+'

    ']'  desplazar e ir al estado 109


Estado 97

   59 parametrizacion: '(' '[' . declaracion_parametros ';' ']' '*' declaracion_parametros ')'

    '('  desplazar e ir al estado 110

    declaracion_parametros  ir al estado 111


Estado 98

   58 cabecera_subprograma: IDENTIFICADOR '[' parametrizacion ']' . '?' '[' tipo_resultado ']' '?'

    '?'  desplazar e ir al estado 112


Estado 99

   42 clase: CLASE '[' . ULTIMA ']' '?' '[' superclases ']' '?' '[' declaracion_componente ']' '+' FIN CLASE

    ULTIMA  desplazar e ir al estado 113


Estado 100

   34 tipo_diccionario: DICCIONARIO DE . especificacion_tipo

    DICCIONARIO  desplazar e ir al estado 78
    LISTA        desplazar e ir al estado 80
    TABLA        desplazar e ir al estado 82
    '['          desplazar e ir al estado 114

    nombre                ir al estado 115
    especificacion_tipo   ir al estado 116
    tipo_no_estructurado  ir al estado 117
    tipo_escalar          ir al estado 85
    tipo_tabla            ir al estado 86
    tipo_diccionario      ir al estado 87


Estado 101

   40 tipo_enumerado: ENUMERACION '[' . DE tipo_escalar ']' '?' '(' elemento_enumeracion ')' '+' FIN ENUMERACION

    DE  desplazar e ir al estado 118


Estado 102

   33 tipo_tabla: LISTA DE . especificacion_tipo

    DICCIONARIO  desplazar e ir al estado 78
    LISTA        desplazar e ir al estado 80
    TABLA        desplazar e ir al estado 82
    '['          desplazar e ir al estado 114

    nombre                ir al estado 115
    especificacion_tipo   ir al estado 119
    tipo_no_estructurado  ir al estado 117
    tipo_escalar          ir al estado 85
    tipo_tabla            ir al estado 86
    tipo_diccionario      ir al estado 87


Estado 103

   38 tipo_registro: REGISTRO '[' . campo ']' '+' FIN REGISTRO

    '('  desplazar e ir al estado 120

    campo  ir al estado 121


Estado 104

   32 tipo_tabla: TABLA '(' . expresion ".." expresion ')' DE especificacion_tipo

    SI   desplazar e ir al estado 122
    '['  desplazar e ir al estado 123

    expresion              ir al estado 124
    expresion_posfija      ir al estado 125
    expresion_binaria      ir al estado 126
    expresion_unaria       ir al estado 127
    expresion_condicional  ir al estado 128


Estado 105

   24 tipo_escalar: '[' SIGNO . ']' '?' tipo_basico '[' longitud ']' '?' '[' RANGO rango ']' '?'

    ']'  desplazar e ir al estado 129


Estado 106

   19 declaracion_tipo: TIPO IDENTIFICADOR ES tipo_no_estructurado ';' .

    $default  reduce usando la regla 19 (declaracion_tipo)


Estado 107

   15 declaracion_objeto: '(' IDENTIFICADOR ')' '+' ':' . CONSTANTE especificacion_tipo ":=" expresion ';'
   16                   | '(' IDENTIFICADOR ')' '+' ':' . especificacion_tipo '[' ":=" expresion ']' '?'

    CONSTANTE    desplazar e ir al estado 130
    DICCIONARIO  desplazar e ir al estado 78
    LISTA        desplazar e ir al estado 80
    TABLA        desplazar e ir al estado 82
    '['          desplazar e ir al estado 114

    nombre                ir al estado 115
    especificacion_tipo   ir al estado 131
    tipo_no_estructurado  ir al estado 117
    tipo_escalar          ir al estado 85
    tipo_tabla            ir al estado 86
    tipo_diccionario      ir al estado 87


Estado 108

   64 cuerpo_subprograma: '[' declaracion ']' '*' PRINCIPIO '[' . instruccion ']' '+' FIN

    DEVOLVER  desplazar e ir al estado 132
    LANZA     desplazar e ir al estado 133
    PRUEBA    desplazar e ir al estado 134
    SI        desplazar e ir al estado 135
    '['       desplazar e ir al estado 136

    nombre                             ir al estado 137
    instruccion                        ir al estado 138
    instruccion_asignacion             ir al estado 139
    instruccion_devolver               ir al estado 140
    instruccion_llamada                ir al estado 141
    llamada_subprograma                ir al estado 142
    instruccion_si                     ir al estado 143
    instruccion_bucle                  ir al estado 144
    instruccion_lanzamiento_excepcion  ir al estado 145
    instruccion_captura_excepcion      ir al estado 146
    objeto                             ir al estado 147


Estado 109

   10 codigo_libreria: '[' libreria ']' '*' '[' exportaciones ']' '?' '[' declaracion ']' . '+'

    '+'  desplazar e ir al estado 148


Estado 110

   60 declaracion_parametros: '(' . IDENTIFICADOR ')' '+' ':' '[' modo ']' '?' especificacion_tipo '[' ":=" expresion ']' '?'

    IDENTIFICADOR  desplazar e ir al estado 149


Estado 111

   59 parametrizacion: '(' '[' declaracion_parametros . ';' ']' '*' declaracion_parametros ')'

    ';'  desplazar e ir al estado 150


Estado 112

   58 cabecera_subprograma: IDENTIFICADOR '[' parametrizacion ']' '?' . '[' tipo_resultado ']' '?'

    '['  desplazar e ir al estado 151


Estado 113

   42 clase: CLASE '[' ULTIMA . ']' '?' '[' superclases ']' '?' '[' declaracion_componente ']' '+' FIN CLASE

    ']'  desplazar e ir al estado 152


Estado 114

    8 nombre: '[' . IDENTIFICADOR "::" ']' '*' IDENTIFICADOR
   24 tipo_escalar: '[' . SIGNO ']' '?' tipo_basico '[' longitud ']' '?' '[' RANGO rango ']' '?'

    SIGNO          desplazar e ir al estado 105
    IDENTIFICADOR  desplazar e ir al estado 31


Estado 115

   17 especificacion_tipo: nombre .

    $default  reduce usando la regla 17 (especificacion_tipo)


Estado 116

   34 tipo_diccionario: DICCIONARIO DE especificacion_tipo .

    $default  reduce usando la regla 34 (tipo_diccionario)


Estado 117

   18 especificacion_tipo: tipo_no_estructurado .

    $default  reduce usando la regla 18 (especificacion_tipo)


Estado 118

   40 tipo_enumerado: ENUMERACION '[' DE . tipo_escalar ']' '?' '(' elemento_enumeracion ')' '+' FIN ENUMERACION

    '['  desplazar e ir al estado 83

    tipo_escalar  ir al estado 153


Estado 119

   33 tipo_tabla: LISTA DE especificacion_tipo .

    $default  reduce usando la regla 33 (tipo_tabla)


Estado 120

   39 campo: '(' . IDENTIFICADOR ')' '+' ':' especificacion_tipo '[' ":=" expresion ']' '?'

    IDENTIFICADOR  desplazar e ir al estado 154


Estado 121

   38 tipo_registro: REGISTRO '[' campo . ']' '+' FIN REGISTRO

    ']'  desplazar e ir al estado 155


Estado 122

  144 expresion_condicional: SI . expresion ENTONCES expresion '[' SINO expresion ']' '?'
  148                      | SI . expresion ENTONCES expresion '[' SINO expresion ']' '?'

    SI   desplazar e ir al estado 122
    '['  desplazar e ir al estado 123

    expresion              ir al estado 156
    expresion_posfija      ir al estado 125
    expresion_binaria      ir al estado 126
    expresion_unaria       ir al estado 127
    expresion_condicional  ir al estado 128


Estado 123

  123 expresion_unaria: '[' . '-' ']' '?' primario

    '-'  desplazar e ir al estado 157


Estado 124

   32 tipo_tabla: TABLA '(' expresion . ".." expresion ')' DE especificacion_tipo
  104 expresion_binaria: expresion . '[' op_binario ']' expresion
  143 expresion_condicional: expresion .
  147                      | expresion .

    '['   desplazar e ir al estado 158
    ".."  desplazar e ir al estado 159

    '['   [reduce usando la regla 143 (expresion_condicional)]
    '['   [reduce usando la regla 147 (expresion_condicional)]
    ".."  [reduce usando la regla 143 (expresion_condicional)]
    ".."  [reduce usando la regla 147 (expresion_condicional)]


Estado 125

   99 expresion: expresion_posfija .

    $default  reduce usando la regla 99 (expresion)


Estado 126

  100 expresion: expresion_binaria .

    $default  reduce usando la regla 100 (expresion)


Estado 127

  101 expresion: expresion_unaria .
  103 expresion_posfija: expresion_unaria . '[' operador_posfijo ']' '?'

    '['  desplazar e ir al estado 160

    '['       [reduce usando la regla 101 (expresion)]
    $default  reduce usando la regla 101 (expresion)


Estado 128

  102 expresion: expresion_condicional .

    $default  reduce usando la regla 102 (expresion)


Estado 129

   24 tipo_escalar: '[' SIGNO ']' . '?' tipo_basico '[' longitud ']' '?' '[' RANGO rango ']' '?'

    '?'  desplazar e ir al estado 161


Estado 130

   15 declaracion_objeto: '(' IDENTIFICADOR ')' '+' ':' CONSTANTE . especificacion_tipo ":=" expresion ';'

    DICCIONARIO  desplazar e ir al estado 78
    LISTA        desplazar e ir al estado 80
    TABLA        desplazar e ir al estado 82
    '['          desplazar e ir al estado 114

    nombre                ir al estado 115
    especificacion_tipo   ir al estado 162
    tipo_no_estructurado  ir al estado 117
    tipo_escalar          ir al estado 85
    tipo_tabla            ir al estado 86
    tipo_diccionario      ir al estado 87


Estado 131

   16 declaracion_objeto: '(' IDENTIFICADOR ')' '+' ':' especificacion_tipo . '[' ":=" expresion ']' '?'

    '['  desplazar e ir al estado 163


Estado 132

   82 instruccion_devolver: DEVOLVER . '[' expresion ']' '?'

    '['  desplazar e ir al estado 164


Estado 133

   91 instruccion_lanzamiento_excepcion: LANZA . nombre

    '['  desplazar e ir al estado 26

    nombre  ir al estado 165


Estado 134

   92 instruccion_captura_excepcion: PRUEBA . '[' instruccion ']' '+' clausulas FIN PRUEBA

    '['  desplazar e ir al estado 166


Estado 135

   86 instruccion_si: SI . expresion ENTONCES '[' instruccion ']' '+' '[' SINO '[' instruccion ']' '+' ']' '?' FIN SI

    SI   desplazar e ir al estado 122
    '['  desplazar e ir al estado 123

    expresion              ir al estado 167
    expresion_posfija      ir al estado 125
    expresion_binaria      ir al estado 126
    expresion_unaria       ir al estado 127
    expresion_condicional  ir al estado 128


Estado 136

    8 nombre: '[' . IDENTIFICADOR "::" ']' '*' IDENTIFICADOR
   87 instruccion_bucle: '[' . IDENTIFICADOR ':' ']' '?' clausula_iteracion '[' instruccion ']' '+' FIN BUCLE

    IDENTIFICADOR  desplazar e ir al estado 168


Estado 137

   84 llamada_subprograma: nombre . '(' '(' definicion_parametro ')' '*' ')'
  135 objeto: nombre .

    '('  desplazar e ir al estado 169

    $default  reduce usando la regla 135 (objeto)


Estado 138

   64 cuerpo_subprograma: '[' declaracion ']' '*' PRINCIPIO '[' instruccion . ']' '+' FIN

    ']'  desplazar e ir al estado 170


Estado 139

   65 instruccion: instruccion_asignacion .

    $default  reduce usando la regla 65 (instruccion)


Estado 140

   66 instruccion: instruccion_devolver .

    $default  reduce usando la regla 66 (instruccion)


Estado 141

   67 instruccion: instruccion_llamada .

    $default  reduce usando la regla 67 (instruccion)


Estado 142

   83 instruccion_llamada: llamada_subprograma .

    $default  reduce usando la regla 83 (instruccion_llamada)


Estado 143

   68 instruccion: instruccion_si .

    $default  reduce usando la regla 68 (instruccion)


Estado 144

   69 instruccion: instruccion_bucle .

    $default  reduce usando la regla 69 (instruccion)


Estado 145

   70 instruccion: instruccion_lanzamiento_excepcion .

    $default  reduce usando la regla 70 (instruccion)


Estado 146

   71 instruccion: instruccion_captura_excepcion .

    $default  reduce usando la regla 71 (instruccion)


Estado 147

   72 instruccion_asignacion: objeto . op_asignacion expresion
  136 objeto: objeto . '.' IDENTIFICADOR
  137       | objeto . '[' '(' expresion ')' '+' ']'
  138       | objeto . '{' '(' CTC_CADENA ')' '+' '}'

    '['    desplazar e ir al estado 171
    ":="   desplazar e ir al estado 172
    ":+"   desplazar e ir al estado 173
    ":-"   desplazar e ir al estado 174
    ":*"   desplazar e ir al estado 175
    ":/"   desplazar e ir al estado 176
    ":\\"  desplazar e ir al estado 177
    ":^"   desplazar e ir al estado 178
    ":<"   desplazar e ir al estado 179
    ":>"   desplazar e ir al estado 180
    '.'    desplazar e ir al estado 181
    '{'    desplazar e ir al estado 182

    op_asignacion  ir al estado 183


Estado 148

   10 codigo_libreria: '[' libreria ']' '*' '[' exportaciones ']' '?' '[' declaracion ']' '+' .

    $default  reduce usando la regla 10 (codigo_libreria)


Estado 149

   60 declaracion_parametros: '(' IDENTIFICADOR . ')' '+' ':' '[' modo ']' '?' especificacion_tipo '[' ":=" expresion ']' '?'

    ')'  desplazar e ir al estado 184


Estado 150

   59 parametrizacion: '(' '[' declaracion_parametros ';' . ']' '*' declaracion_parametros ')'

    ']'  desplazar e ir al estado 185


Estado 151

   58 cabecera_subprograma: IDENTIFICADOR '[' parametrizacion ']' '?' '[' . tipo_resultado ']' '?'

    DEVOLVER  desplazar e ir al estado 186

    tipo_resultado  ir al estado 187


Estado 152

   42 clase: CLASE '[' ULTIMA ']' . '?' '[' superclases ']' '?' '[' declaracion_componente ']' '+' FIN CLASE

    '?'  desplazar e ir al estado 188


Estado 153

   40 tipo_enumerado: ENUMERACION '[' DE tipo_escalar . ']' '?' '(' elemento_enumeracion ')' '+' FIN ENUMERACION

    ']'  desplazar e ir al estado 189


Estado 154

   39 campo: '(' IDENTIFICADOR . ')' '+' ':' especificacion_tipo '[' ":=" expresion ']' '?'

    ')'  desplazar e ir al estado 190


Estado 155

   38 tipo_registro: REGISTRO '[' campo ']' . '+' FIN REGISTRO

    '+'  desplazar e ir al estado 191


Estado 156

  104 expresion_binaria: expresion . '[' op_binario ']' expresion
  143 expresion_condicional: expresion .
  144                      | SI expresion . ENTONCES expresion '[' SINO expresion ']' '?'
  147                      | expresion .
  148                      | SI expresion . ENTONCES expresion '[' SINO expresion ']' '?'

    ENTONCES  desplazar e ir al estado 192
    '['       desplazar e ir al estado 158

    ENTONCES  [reduce usando la regla 143 (expresion_condicional)]
    ENTONCES  [reduce usando la regla 147 (expresion_condicional)]
    '['       [reduce usando la regla 143 (expresion_condicional)]
    '['       [reduce usando la regla 147 (expresion_condicional)]


Estado 157

  123 expresion_unaria: '[' '-' . ']' '?' primario

    ']'  desplazar e ir al estado 193


Estado 158

  104 expresion_binaria: expresion '[' . op_binario ']' expresion

    '<'    desplazar e ir al estado 194
    '>'    desplazar e ir al estado 195
    '+'    desplazar e ir al estado 196
    '-'    desplazar e ir al estado 197
    '*'    desplazar e ir al estado 198
    '^'    desplazar e ir al estado 199
    "\\/"  desplazar e ir al estado 200
    "/\\"  desplazar e ir al estado 201
    "<="   desplazar e ir al estado 202
    ">="   desplazar e ir al estado 203
    '='    desplazar e ir al estado 204
    "~="   desplazar e ir al estado 205
    "<-"   desplazar e ir al estado 206
    "->"   desplazar e ir al estado 207
    "/"    desplazar e ir al estado 208
    "\\"   desplazar e ir al estado 209

    op_binario  ir al estado 210


Estado 159

   32 tipo_tabla: TABLA '(' expresion ".." . expresion ')' DE especificacion_tipo

    SI   desplazar e ir al estado 122
    '['  desplazar e ir al estado 123

    expresion              ir al estado 211
    expresion_posfija      ir al estado 125
    expresion_binaria      ir al estado 126
    expresion_unaria       ir al estado 127
    expresion_condicional  ir al estado 128


Estado 160

  103 expresion_posfija: expresion_unaria '[' . operador_posfijo ']' '?'

    "++"  desplazar e ir al estado 212
    "--"  desplazar e ir al estado 213

    operador_posfijo  ir al estado 214


Estado 161

   24 tipo_escalar: '[' SIGNO ']' '?' . tipo_basico '[' longitud ']' '?' '[' RANGO rango ']' '?'

    BOOLEANO      desplazar e ir al estado 215
    CTC_CARACTER  desplazar e ir al estado 216
    CTC_ENTERA    desplazar e ir al estado 217
    CTC_REAL      desplazar e ir al estado 218

    tipo_basico  ir al estado 219


Estado 162

   15 declaracion_objeto: '(' IDENTIFICADOR ')' '+' ':' CONSTANTE especificacion_tipo . ":=" expresion ';'

    ":="  desplazar e ir al estado 220


Estado 163

   16 declaracion_objeto: '(' IDENTIFICADOR ')' '+' ':' especificacion_tipo '[' . ":=" expresion ']' '?'

    ":="  desplazar e ir al estado 221


Estado 164

   82 instruccion_devolver: DEVOLVER '[' . expresion ']' '?'

    SI   desplazar e ir al estado 122
    '['  desplazar e ir al estado 123

    expresion              ir al estado 222
    expresion_posfija      ir al estado 125
    expresion_binaria      ir al estado 126
    expresion_unaria       ir al estado 127
    expresion_condicional  ir al estado 128


Estado 165

   91 instruccion_lanzamiento_excepcion: LANZA nombre .

    $default  reduce usando la regla 91 (instruccion_lanzamiento_excepcion)


Estado 166

   92 instruccion_captura_excepcion: PRUEBA '[' . instruccion ']' '+' clausulas FIN PRUEBA

    DEVOLVER  desplazar e ir al estado 132
    LANZA     desplazar e ir al estado 133
    PRUEBA    desplazar e ir al estado 134
    SI        desplazar e ir al estado 135
    '['       desplazar e ir al estado 136

    nombre                             ir al estado 137
    instruccion                        ir al estado 223
    instruccion_asignacion             ir al estado 139
    instruccion_devolver               ir al estado 140
    instruccion_llamada                ir al estado 141
    llamada_subprograma                ir al estado 142
    instruccion_si                     ir al estado 143
    instruccion_bucle                  ir al estado 144
    instruccion_lanzamiento_excepcion  ir al estado 145
    instruccion_captura_excepcion      ir al estado 146
    objeto                             ir al estado 147


Estado 167

   86 instruccion_si: SI expresion . ENTONCES '[' instruccion ']' '+' '[' SINO '[' instruccion ']' '+' ']' '?' FIN SI
  104 expresion_binaria: expresion . '[' op_binario ']' expresion
  143 expresion_condicional: expresion .
  147                      | expresion .

    ENTONCES  desplazar e ir al estado 224
    '['       desplazar e ir al estado 158

    ENTONCES  [reduce usando la regla 143 (expresion_condicional)]
    ENTONCES  [reduce usando la regla 147 (expresion_condicional)]
    '['       [reduce usando la regla 143 (expresion_condicional)]
    '['       [reduce usando la regla 147 (expresion_condicional)]


Estado 168

    8 nombre: '[' IDENTIFICADOR . "::" ']' '*' IDENTIFICADOR
   87 instruccion_bucle: '[' IDENTIFICADOR . ':' ']' '?' clausula_iteracion '[' instruccion ']' '+' FIN BUCLE

    "::"  desplazar e ir al estado 37
    ':'   desplazar e ir al estado 225


Estado 169

   84 llamada_subprograma: nombre '(' . '(' definicion_parametro ')' '*' ')'

    '('  desplazar e ir al estado 226


Estado 170

   64 cuerpo_subprograma: '[' declaracion ']' '*' PRINCIPIO '[' instruccion ']' . '+' FIN

    '+'  desplazar e ir al estado 227


Estado 171

  137 objeto: objeto '[' . '(' expresion ')' '+' ']'

    '('  desplazar e ir al estado 228


Estado 172

   73 op_asignacion: ":=" .

    $default  reduce usando la regla 73 (op_asignacion)


Estado 173

   74 op_asignacion: ":+" .

    $default  reduce usando la regla 74 (op_asignacion)


Estado 174

   75 op_asignacion: ":-" .

    $default  reduce usando la regla 75 (op_asignacion)


Estado 175

   76 op_asignacion: ":*" .

    $default  reduce usando la regla 76 (op_asignacion)


Estado 176

   77 op_asignacion: ":/" .

    $default  reduce usando la regla 77 (op_asignacion)


Estado 177

   78 op_asignacion: ":\\" .

    $default  reduce usando la regla 78 (op_asignacion)


Estado 178

   79 op_asignacion: ":^" .

    $default  reduce usando la regla 79 (op_asignacion)


Estado 179

   80 op_asignacion: ":<" .

    $default  reduce usando la regla 80 (op_asignacion)


Estado 180

   81 op_asignacion: ":>" .

    $default  reduce usando la regla 81 (op_asignacion)


Estado 181

  136 objeto: objeto '.' . IDENTIFICADOR

    IDENTIFICADOR  desplazar e ir al estado 229


Estado 182

  138 objeto: objeto '{' . '(' CTC_CADENA ')' '+' '}'

    '('  desplazar e ir al estado 230


Estado 183

   72 instruccion_asignacion: objeto op_asignacion . expresion

    SI   desplazar e ir al estado 122
    '['  desplazar e ir al estado 123

    expresion              ir al estado 231
    expresion_posfija      ir al estado 125
    expresion_binaria      ir al estado 126
    expresion_unaria       ir al estado 127
    expresion_condicional  ir al estado 128


Estado 184

   60 declaracion_parametros: '(' IDENTIFICADOR ')' . '+' ':' '[' modo ']' '?' especificacion_tipo '[' ":=" expresion ']' '?'

    '+'  desplazar e ir al estado 232


Estado 185

   59 parametrizacion: '(' '[' declaracion_parametros ';' ']' . '*' declaracion_parametros ')'

    '*'  desplazar e ir al estado 233


Estado 186

   63 tipo_resultado: DEVOLVER . especificacion_tipo

    DICCIONARIO  desplazar e ir al estado 78
    LISTA        desplazar e ir al estado 80
    TABLA        desplazar e ir al estado 82
    '['          desplazar e ir al estado 114

    nombre                ir al estado 115
    especificacion_tipo   ir al estado 234
    tipo_no_estructurado  ir al estado 117
    tipo_escalar          ir al estado 85
    tipo_tabla            ir al estado 86
    tipo_diccionario      ir al estado 87


Estado 187

   58 cabecera_subprograma: IDENTIFICADOR '[' parametrizacion ']' '?' '[' tipo_resultado . ']' '?'

    ']'  desplazar e ir al estado 235


Estado 188

   42 clase: CLASE '[' ULTIMA ']' '?' . '[' superclases ']' '?' '[' declaracion_componente ']' '+' FIN CLASE

    '['  desplazar e ir al estado 236


Estado 189

   40 tipo_enumerado: ENUMERACION '[' DE tipo_escalar ']' . '?' '(' elemento_enumeracion ')' '+' FIN ENUMERACION

    '?'  desplazar e ir al estado 237


Estado 190

   39 campo: '(' IDENTIFICADOR ')' . '+' ':' especificacion_tipo '[' ":=" expresion ']' '?'

    '+'  desplazar e ir al estado 238


Estado 191

   38 tipo_registro: REGISTRO '[' campo ']' '+' . FIN REGISTRO

    FIN  desplazar e ir al estado 239


Estado 192

  144 expresion_condicional: SI expresion ENTONCES . expresion '[' SINO expresion ']' '?'
  148                      | SI expresion ENTONCES . expresion '[' SINO expresion ']' '?'

    SI   desplazar e ir al estado 122
    '['  desplazar e ir al estado 123

    expresion              ir al estado 240
    expresion_posfija      ir al estado 125
    expresion_binaria      ir al estado 126
    expresion_unaria       ir al estado 127
    expresion_condicional  ir al estado 128


Estado 193

  123 expresion_unaria: '[' '-' ']' . '?' primario

    '?'  desplazar e ir al estado 241


Estado 194

  109 op_binario: '<' .

    $default  reduce usando la regla 109 (op_binario)


Estado 195

  110 op_binario: '>' .

    $default  reduce usando la regla 110 (op_binario)


Estado 196

  117 op_binario: '+' .

    $default  reduce usando la regla 117 (op_binario)


Estado 197

  118 op_binario: '-' .

    $default  reduce usando la regla 118 (op_binario)


Estado 198

  119 op_binario: '*' .

    $default  reduce usando la regla 119 (op_binario)


Estado 199

  122 op_binario: '^' .

    $default  reduce usando la regla 122 (op_binario)


Estado 200

  107 op_binario: "\\/" .

    $default  reduce usando la regla 107 (op_binario)


Estado 201

  108 op_binario: "/\\" .

    $default  reduce usando la regla 108 (op_binario)


Estado 202

  111 op_binario: "<=" .

    $default  reduce usando la regla 111 (op_binario)


Estado 203

  112 op_binario: ">=" .

    $default  reduce usando la regla 112 (op_binario)


Estado 204

  113 op_binario: '=' .

    $default  reduce usando la regla 113 (op_binario)


Estado 205

  114 op_binario: "~=" .

    $default  reduce usando la regla 114 (op_binario)


Estado 206

  115 op_binario: "<-" .

    $default  reduce usando la regla 115 (op_binario)


Estado 207

  116 op_binario: "->" .

    $default  reduce usando la regla 116 (op_binario)


Estado 208

  120 op_binario: "/" .

    $default  reduce usando la regla 120 (op_binario)


Estado 209

  121 op_binario: "\\" .

    $default  reduce usando la regla 121 (op_binario)


Estado 210

  104 expresion_binaria: expresion '[' op_binario . ']' expresion

    ']'  desplazar e ir al estado 242


Estado 211

   32 tipo_tabla: TABLA '(' expresion ".." expresion . ')' DE especificacion_tipo
  104 expresion_binaria: expresion . '[' op_binario ']' expresion
  143 expresion_condicional: expresion .
  147                      | expresion .

    '['  desplazar e ir al estado 158
    ')'  desplazar e ir al estado 243

    '['  [reduce usando la regla 143 (expresion_condicional)]
    '['  [reduce usando la regla 147 (expresion_condicional)]
    ')'  [reduce usando la regla 143 (expresion_condicional)]
    ')'  [reduce usando la regla 147 (expresion_condicional)]


Estado 212

  105 operador_posfijo: "++" .

    $default  reduce usando la regla 105 (operador_posfijo)


Estado 213

  106 operador_posfijo: "--" .

    $default  reduce usando la regla 106 (operador_posfijo)


Estado 214

  103 expresion_posfija: expresion_unaria '[' operador_posfijo . ']' '?'

    ']'  desplazar e ir al estado 244


Estado 215

   27 tipo_basico: BOOLEANO .

    $default  reduce usando la regla 27 (tipo_basico)


Estado 216

   28 tipo_basico: CTC_CARACTER .

    $default  reduce usando la regla 28 (tipo_basico)


Estado 217

   29 tipo_basico: CTC_ENTERA .

    $default  reduce usando la regla 29 (tipo_basico)


Estado 218

   30 tipo_basico: CTC_REAL .

    $default  reduce usando la regla 30 (tipo_basico)


Estado 219

   24 tipo_escalar: '[' SIGNO ']' '?' tipo_basico . '[' longitud ']' '?' '[' RANGO rango ']' '?'

    '['  desplazar e ir al estado 245


Estado 220

   15 declaracion_objeto: '(' IDENTIFICADOR ')' '+' ':' CONSTANTE especificacion_tipo ":=" . expresion ';'

    SI   desplazar e ir al estado 122
    '['  desplazar e ir al estado 123

    expresion              ir al estado 246
    expresion_posfija      ir al estado 125
    expresion_binaria      ir al estado 126
    expresion_unaria       ir al estado 127
    expresion_condicional  ir al estado 128


Estado 221

   16 declaracion_objeto: '(' IDENTIFICADOR ')' '+' ':' especificacion_tipo '[' ":=" . expresion ']' '?'

    SI   desplazar e ir al estado 122
    '['  desplazar e ir al estado 123

    expresion              ir al estado 247
    expresion_posfija      ir al estado 125
    expresion_binaria      ir al estado 126
    expresion_unaria       ir al estado 127
    expresion_condicional  ir al estado 128


Estado 222

   82 instruccion_devolver: DEVOLVER '[' expresion . ']' '?'
  104 expresion_binaria: expresion . '[' op_binario ']' expresion
  143 expresion_condicional: expresion .
  147                      | expresion .

    '['  desplazar e ir al estado 158
    ']'  desplazar e ir al estado 248

    '['  [reduce usando la regla 143 (expresion_condicional)]
    '['  [reduce usando la regla 147 (expresion_condicional)]
    ']'  [reduce usando la regla 143 (expresion_condicional)]
    ']'  [reduce usando la regla 147 (expresion_condicional)]


Estado 223

   92 instruccion_captura_excepcion: PRUEBA '[' instruccion . ']' '+' clausulas FIN PRUEBA

    ']'  desplazar e ir al estado 249


Estado 224

   86 instruccion_si: SI expresion ENTONCES . '[' instruccion ']' '+' '[' SINO '[' instruccion ']' '+' ']' '?' FIN SI

    '['  desplazar e ir al estado 250


Estado 225

   87 instruccion_bucle: '[' IDENTIFICADOR ':' . ']' '?' clausula_iteracion '[' instruccion ']' '+' FIN BUCLE

    ']'  desplazar e ir al estado 251


Estado 226

   84 llamada_subprograma: nombre '(' '(' . definicion_parametro ')' '*' ')'

    '['  desplazar e ir al estado 252

    definicion_parametro  ir al estado 253


Estado 227

   64 cuerpo_subprograma: '[' declaracion ']' '*' PRINCIPIO '[' instruccion ']' '+' . FIN

    FIN  desplazar e ir al estado 254


Estado 228

  137 objeto: objeto '[' '(' . expresion ')' '+' ']'

    SI   desplazar e ir al estado 122
    '['  desplazar e ir al estado 123

    expresion              ir al estado 255
    expresion_posfija      ir al estado 125
    expresion_binaria      ir al estado 126
    expresion_unaria       ir al estado 127
    expresion_condicional  ir al estado 128


Estado 229

  136 objeto: objeto '.' IDENTIFICADOR .

    $default  reduce usando la regla 136 (objeto)


Estado 230

  138 objeto: objeto '{' '(' . CTC_CADENA ')' '+' '}'

    CTC_CADENA  desplazar e ir al estado 256


Estado 231

   72 instruccion_asignacion: objeto op_asignacion expresion .
  104 expresion_binaria: expresion . '[' op_binario ']' expresion
  143 expresion_condicional: expresion .
  147                      | expresion .

    '['  desplazar e ir al estado 158

    '['       [reduce usando la regla 143 (expresion_condicional)]
    '['       [reduce usando la regla 147 (expresion_condicional)]
    ']'       reduce usando la regla 72 (instruccion_asignacion)
    ']'       [reduce usando la regla 143 (expresion_condicional)]
    ']'       [reduce usando la regla 147 (expresion_condicional)]
    $default  reduce usando la regla 72 (instruccion_asignacion)


Estado 232

   60 declaracion_parametros: '(' IDENTIFICADOR ')' '+' . ':' '[' modo ']' '?' especificacion_tipo '[' ":=" expresion ']' '?'

    ':'  desplazar e ir al estado 257


Estado 233

   59 parametrizacion: '(' '[' declaracion_parametros ';' ']' '*' . declaracion_parametros ')'

    '('  desplazar e ir al estado 110

    declaracion_parametros  ir al estado 258


Estado 234

   63 tipo_resultado: DEVOLVER especificacion_tipo .

    $default  reduce usando la regla 63 (tipo_resultado)


Estado 235

   58 cabecera_subprograma: IDENTIFICADOR '[' parametrizacion ']' '?' '[' tipo_resultado ']' . '?'

    '?'  desplazar e ir al estado 259


Estado 236

   42 clase: CLASE '[' ULTIMA ']' '?' '[' . superclases ']' '?' '[' declaracion_componente ']' '+' FIN CLASE

    '('  desplazar e ir al estado 260

    superclases  ir al estado 261


Estado 237

   40 tipo_enumerado: ENUMERACION '[' DE tipo_escalar ']' '?' . '(' elemento_enumeracion ')' '+' FIN ENUMERACION

    '('  desplazar e ir al estado 262


Estado 238

   39 campo: '(' IDENTIFICADOR ')' '+' . ':' especificacion_tipo '[' ":=" expresion ']' '?'

    ':'  desplazar e ir al estado 263


Estado 239

   38 tipo_registro: REGISTRO '[' campo ']' '+' FIN . REGISTRO

    REGISTRO  desplazar e ir al estado 264


Estado 240

  104 expresion_binaria: expresion . '[' op_binario ']' expresion
  143 expresion_condicional: expresion .
  144                      | SI expresion ENTONCES expresion . '[' SINO expresion ']' '?'
  147                      | expresion .
  148                      | SI expresion ENTONCES expresion . '[' SINO expresion ']' '?'

    '['  desplazar e ir al estado 265

    '['  [reduce usando la regla 143 (expresion_condicional)]
    '['  [reduce usando la regla 147 (expresion_condicional)]


Estado 241

  123 expresion_unaria: '[' '-' ']' '?' . primario

    FALSO         desplazar e ir al estado 266
    VERDADERO     desplazar e ir al estado 267
    CTC_CADENA    desplazar e ir al estado 268
    CTC_CARACTER  desplazar e ir al estado 269
    CTC_ENTERA    desplazar e ir al estado 270
    CTC_REAL      desplazar e ir al estado 271
    '['           desplazar e ir al estado 272
    '('           desplazar e ir al estado 273
    '{'           desplazar e ir al estado 274

    nombre         ir al estado 275
    primario       ir al estado 276
    literal        ir al estado 277
    objeto         ir al estado 278
    enumeraciones  ir al estado 279


Estado 242

  104 expresion_binaria: expresion '[' op_binario ']' . expresion

    SI   desplazar e ir al estado 122
    '['  desplazar e ir al estado 123

    expresion              ir al estado 280
    expresion_posfija      ir al estado 125
    expresion_binaria      ir al estado 126
    expresion_unaria       ir al estado 127
    expresion_condicional  ir al estado 128


Estado 243

   32 tipo_tabla: TABLA '(' expresion ".." expresion ')' . DE especificacion_tipo

    DE  desplazar e ir al estado 281


Estado 244

  103 expresion_posfija: expresion_unaria '[' operador_posfijo ']' . '?'

    '?'  desplazar e ir al estado 282


Estado 245

   24 tipo_escalar: '[' SIGNO ']' '?' tipo_basico '[' . longitud ']' '?' '[' RANGO rango ']' '?'

    CORTO  desplazar e ir al estado 283
    LARGO  desplazar e ir al estado 284

    longitud  ir al estado 285


Estado 246

   15 declaracion_objeto: '(' IDENTIFICADOR ')' '+' ':' CONSTANTE especificacion_tipo ":=" expresion . ';'
  104 expresion_binaria: expresion . '[' op_binario ']' expresion
  143 expresion_condicional: expresion .
  147                      | expresion .

    ';'  desplazar e ir al estado 286
    '['  desplazar e ir al estado 158

    ';'  [reduce usando la regla 143 (expresion_condicional)]
    ';'  [reduce usando la regla 147 (expresion_condicional)]
    '['  [reduce usando la regla 143 (expresion_condicional)]
    '['  [reduce usando la regla 147 (expresion_condicional)]


Estado 247

   16 declaracion_objeto: '(' IDENTIFICADOR ')' '+' ':' especificacion_tipo '[' ":=" expresion . ']' '?'
  104 expresion_binaria: expresion . '[' op_binario ']' expresion
  143 expresion_condicional: expresion .
  147                      | expresion .

    '['  desplazar e ir al estado 158
    ']'  desplazar e ir al estado 287

    '['  [reduce usando la regla 143 (expresion_condicional)]
    '['  [reduce usando la regla 147 (expresion_condicional)]
    ']'  [reduce usando la regla 143 (expresion_condicional)]
    ']'  [reduce usando la regla 147 (expresion_condicional)]


Estado 248

   82 instruccion_devolver: DEVOLVER '[' expresion ']' . '?'

    '?'  desplazar e ir al estado 288


Estado 249

   92 instruccion_captura_excepcion: PRUEBA '[' instruccion ']' . '+' clausulas FIN PRUEBA

    '+'  desplazar e ir al estado 289


Estado 250

   86 instruccion_si: SI expresion ENTONCES '[' . instruccion ']' '+' '[' SINO '[' instruccion ']' '+' ']' '?' FIN SI

    DEVOLVER  desplazar e ir al estado 132
    LANZA     desplazar e ir al estado 133
    PRUEBA    desplazar e ir al estado 134
    SI        desplazar e ir al estado 135
    '['       desplazar e ir al estado 136

    nombre                             ir al estado 137
    instruccion                        ir al estado 290
    instruccion_asignacion             ir al estado 139
    instruccion_devolver               ir al estado 140
    instruccion_llamada                ir al estado 141
    llamada_subprograma                ir al estado 142
    instruccion_si                     ir al estado 143
    instruccion_bucle                  ir al estado 144
    instruccion_lanzamiento_excepcion  ir al estado 145
    instruccion_captura_excepcion      ir al estado 146
    objeto                             ir al estado 147


Estado 251

   87 instruccion_bucle: '[' IDENTIFICADOR ':' ']' . '?' clausula_iteracion '[' instruccion ']' '+' FIN BUCLE

    '?'  desplazar e ir al estado 291


Estado 252

   85 definicion_parametro: '[' . IDENTIFICADOR ":=" ']' '?' expresion

    IDENTIFICADOR  desplazar e ir al estado 292


Estado 253

   84 llamada_subprograma: nombre '(' '(' definicion_parametro . ')' '*' ')'

    ')'  desplazar e ir al estado 293


Estado 254

   64 cuerpo_subprograma: '[' declaracion ']' '*' PRINCIPIO '[' instruccion ']' '+' FIN .

    $default  reduce usando la regla 64 (cuerpo_subprograma)


Estado 255

  104 expresion_binaria: expresion . '[' op_binario ']' expresion
  137 objeto: objeto '[' '(' expresion . ')' '+' ']'
  143 expresion_condicional: expresion .
  147                      | expresion .

    '['  desplazar e ir al estado 158
    ')'  desplazar e ir al estado 294

    '['  [reduce usando la regla 143 (expresion_condicional)]
    '['  [reduce usando la regla 147 (expresion_condicional)]
    ')'  [reduce usando la regla 143 (expresion_condicional)]
    ')'  [reduce usando la regla 147 (expresion_condicional)]


Estado 256

  138 objeto: objeto '{' '(' CTC_CADENA . ')' '+' '}'

    ')'  desplazar e ir al estado 295


Estado 257

   60 declaracion_parametros: '(' IDENTIFICADOR ')' '+' ':' . '[' modo ']' '?' especificacion_tipo '[' ":=" expresion ']' '?'

    '['  desplazar e ir al estado 296


Estado 258

   59 parametrizacion: '(' '[' declaracion_parametros ';' ']' '*' declaracion_parametros . ')'

    ')'  desplazar e ir al estado 297


Estado 259

   58 cabecera_subprograma: IDENTIFICADOR '[' parametrizacion ']' '?' '[' tipo_resultado ']' '?' .

    $default  reduce usando la regla 58 (cabecera_subprograma)


Estado 260

   43 superclases: '(' . '(' nombre ')' '+' ')'

    '('  desplazar e ir al estado 298


Estado 261

   42 clase: CLASE '[' ULTIMA ']' '?' '[' superclases . ']' '?' '[' declaracion_componente ']' '+' FIN CLASE

    ']'  desplazar e ir al estado 299


Estado 262

   40 tipo_enumerado: ENUMERACION '[' DE tipo_escalar ']' '?' '(' . elemento_enumeracion ')' '+' FIN ENUMERACION

    IDENTIFICADOR  desplazar e ir al estado 300

    elemento_enumeracion  ir al estado 301


Estado 263

   39 campo: '(' IDENTIFICADOR ')' '+' ':' . especificacion_tipo '[' ":=" expresion ']' '?'

    DICCIONARIO  desplazar e ir al estado 78
    LISTA        desplazar e ir al estado 80
    TABLA        desplazar e ir al estado 82
    '['          desplazar e ir al estado 114

    nombre                ir al estado 115
    especificacion_tipo   ir al estado 302
    tipo_no_estructurado  ir al estado 117
    tipo_escalar          ir al estado 85
    tipo_tabla            ir al estado 86
    tipo_diccionario      ir al estado 87


Estado 264

   38 tipo_registro: REGISTRO '[' campo ']' '+' FIN REGISTRO .

    $default  reduce usando la regla 38 (tipo_registro)


Estado 265

  104 expresion_binaria: expresion '[' . op_binario ']' expresion
  144 expresion_condicional: SI expresion ENTONCES expresion '[' . SINO expresion ']' '?'
  148                      | SI expresion ENTONCES expresion '[' . SINO expresion ']' '?'

    '<'    desplazar e ir al estado 194
    '>'    desplazar e ir al estado 195
    '+'    desplazar e ir al estado 196
    '-'    desplazar e ir al estado 197
    '*'    desplazar e ir al estado 198
    '^'    desplazar e ir al estado 199
    SINO   desplazar e ir al estado 303
    "\\/"  desplazar e ir al estado 200
    "/\\"  desplazar e ir al estado 201
    "<="   desplazar e ir al estado 202
    ">="   desplazar e ir al estado 203
    '='    desplazar e ir al estado 204
    "~="   desplazar e ir al estado 205
    "<-"   desplazar e ir al estado 206
    "->"   desplazar e ir al estado 207
    "/"    desplazar e ir al estado 208
    "\\"   desplazar e ir al estado 209

    op_binario  ir al estado 210


Estado 266

  130 literal: FALSO .

    $default  reduce usando la regla 130 (literal)


Estado 267

  129 literal: VERDADERO .

    $default  reduce usando la regla 129 (literal)


Estado 268

  134 literal: CTC_CADENA .

    $default  reduce usando la regla 134 (literal)


Estado 269

  133 literal: CTC_CARACTER .

    $default  reduce usando la regla 133 (literal)


Estado 270

  131 literal: CTC_ENTERA .

    $default  reduce usando la regla 131 (literal)


Estado 271

  132 literal: CTC_REAL .

    $default  reduce usando la regla 132 (literal)


Estado 272

    8 nombre: '[' . IDENTIFICADOR "::" ']' '*' IDENTIFICADOR
  126 primario: '[' . objeto ']' '?' llamada_subprograma
  139 enumeraciones: '[' . expresion_condicional '[' clausula_iteracion ']' '+' ']'
  140              | '[' . '(' expresion ')' '+' ']'

    SI             desplazar e ir al estado 122
    IDENTIFICADOR  desplazar e ir al estado 31
    '['            desplazar e ir al estado 304
    '('            desplazar e ir al estado 305

    nombre                 ir al estado 275
    expresion              ir al estado 306
    expresion_posfija      ir al estado 125
    expresion_binaria      ir al estado 126
    expresion_unaria       ir al estado 127
    objeto                 ir al estado 307
    expresion_condicional  ir al estado 308


Estado 273

  128 primario: '(' . expresion ')'

    SI   desplazar e ir al estado 122
    '['  desplazar e ir al estado 123

    expresion              ir al estado 309
    expresion_posfija      ir al estado 125
    expresion_binaria      ir al estado 126
    expresion_unaria       ir al estado 127
    expresion_condicional  ir al estado 128


Estado 274

  141 enumeraciones: '{' . '(' clave_valor ')' '+' '}'
  142              | '{' . '(' campo_valor ')' '+' '}'

    '('  desplazar e ir al estado 310


Estado 275

  135 objeto: nombre .

    $default  reduce usando la regla 135 (objeto)


Estado 276

  123 expresion_unaria: '[' '-' ']' '?' primario .

    $default  reduce usando la regla 123 (expresion_unaria)


Estado 277

  124 primario: literal .

    $default  reduce usando la regla 124 (primario)


Estado 278

  125 primario: objeto .
  136 objeto: objeto . '.' IDENTIFICADOR
  137       | objeto . '[' '(' expresion ')' '+' ']'
  138       | objeto . '{' '(' CTC_CADENA ')' '+' '}'

    '['  desplazar e ir al estado 171
    '.'  desplazar e ir al estado 181
    '{'  desplazar e ir al estado 182

    '['       [reduce usando la regla 125 (primario)]
    $default  reduce usando la regla 125 (primario)


Estado 279

  127 primario: enumeraciones .

    $default  reduce usando la regla 127 (primario)


Estado 280

  104 expresion_binaria: expresion . '[' op_binario ']' expresion
  104                  | expresion '[' op_binario ']' expresion .
  143 expresion_condicional: expresion .
  147                      | expresion .

    '['  desplazar e ir al estado 158

    ENTONCES  reduce usando la regla 104 (expresion_binaria)
    ENTONCES  [reduce usando la regla 143 (expresion_condicional)]
    ENTONCES  [reduce usando la regla 147 (expresion_condicional)]
    ';'       reduce usando la regla 104 (expresion_binaria)
    ';'       [reduce usando la regla 143 (expresion_condicional)]
    ';'       [reduce usando la regla 147 (expresion_condicional)]
    '['       [reduce usando la regla 104 (expresion_binaria)]
    '['       [reduce usando la regla 143 (expresion_condicional)]
    '['       [reduce usando la regla 147 (expresion_condicional)]
    ']'       reduce usando la regla 104 (expresion_binaria)
    ']'       [reduce usando la regla 143 (expresion_condicional)]
    ']'       [reduce usando la regla 147 (expresion_condicional)]
    ')'       reduce usando la regla 104 (expresion_binaria)
    ')'       [reduce usando la regla 143 (expresion_condicional)]
    ')'       [reduce usando la regla 147 (expresion_condicional)]
    ".."      reduce usando la regla 104 (expresion_binaria)
    ".."      [reduce usando la regla 143 (expresion_condicional)]
    ".."      [reduce usando la regla 147 (expresion_condicional)]
    $default  reduce usando la regla 104 (expresion_binaria)


Estado 281

   32 tipo_tabla: TABLA '(' expresion ".." expresion ')' DE . especificacion_tipo

    DICCIONARIO  desplazar e ir al estado 78
    LISTA        desplazar e ir al estado 80
    TABLA        desplazar e ir al estado 82
    '['          desplazar e ir al estado 114

    nombre                ir al estado 115
    especificacion_tipo   ir al estado 311
    tipo_no_estructurado  ir al estado 117
    tipo_escalar          ir al estado 85
    tipo_tabla            ir al estado 86
    tipo_diccionario      ir al estado 87


Estado 282

  103 expresion_posfija: expresion_unaria '[' operador_posfijo ']' '?' .

    $default  reduce usando la regla 103 (expresion_posfija)


Estado 283

   25 longitud: CORTO .

    $default  reduce usando la regla 25 (longitud)


Estado 284

   26 longitud: LARGO .

    $default  reduce usando la regla 26 (longitud)


Estado 285

   24 tipo_escalar: '[' SIGNO ']' '?' tipo_basico '[' longitud . ']' '?' '[' RANGO rango ']' '?'

    ']'  desplazar e ir al estado 312


Estado 286

   15 declaracion_objeto: '(' IDENTIFICADOR ')' '+' ':' CONSTANTE especificacion_tipo ":=" expresion ';' .

    $default  reduce usando la regla 15 (declaracion_objeto)


Estado 287

   16 declaracion_objeto: '(' IDENTIFICADOR ')' '+' ':' especificacion_tipo '[' ":=" expresion ']' . '?'

    '?'  desplazar e ir al estado 313


Estado 288

   82 instruccion_devolver: DEVOLVER '[' expresion ']' '?' .

    $default  reduce usando la regla 82 (instruccion_devolver)


Estado 289

   92 instruccion_captura_excepcion: PRUEBA '[' instruccion ']' '+' . clausulas FIN PRUEBA

    FINALMENTE  desplazar e ir al estado 314
    '['         desplazar e ir al estado 315

    clausulas            ir al estado 316
    clausulas_excepcion  ir al estado 317
    clausula_finalmente  ir al estado 318


Estado 290

   86 instruccion_si: SI expresion ENTONCES '[' instruccion . ']' '+' '[' SINO '[' instruccion ']' '+' ']' '?' FIN SI

    ']'  desplazar e ir al estado 319


Estado 291

   87 instruccion_bucle: '[' IDENTIFICADOR ':' ']' '?' . clausula_iteracion '[' instruccion ']' '+' FIN BUCLE

    MIENTRAS  desplazar e ir al estado 320
    PARA      desplazar e ir al estado 321
    REPETIR   desplazar e ir al estado 322

    clausula_iteracion  ir al estado 323


Estado 292

   85 definicion_parametro: '[' IDENTIFICADOR . ":=" ']' '?' expresion

    ":="  desplazar e ir al estado 324


Estado 293

   84 llamada_subprograma: nombre '(' '(' definicion_parametro ')' . '*' ')'

    '*'  desplazar e ir al estado 325


Estado 294

  137 objeto: objeto '[' '(' expresion ')' . '+' ']'

    '+'  desplazar e ir al estado 326


Estado 295

  138 objeto: objeto '{' '(' CTC_CADENA ')' . '+' '}'

    '+'  desplazar e ir al estado 327


Estado 296

   60 declaracion_parametros: '(' IDENTIFICADOR ')' '+' ':' '[' . modo ']' '?' especificacion_tipo '[' ":=" expresion ']' '?'

    REFERENCIA  desplazar e ir al estado 328
    VALOR       desplazar e ir al estado 329

    modo  ir al estado 330


Estado 297

   59 parametrizacion: '(' '[' declaracion_parametros ';' ']' '*' declaracion_parametros ')' .

    $default  reduce usando la regla 59 (parametrizacion)


Estado 298

   43 superclases: '(' '(' . nombre ')' '+' ')'

    '['  desplazar e ir al estado 26

    nombre  ir al estado 331


Estado 299

   42 clase: CLASE '[' ULTIMA ']' '?' '[' superclases ']' . '?' '[' declaracion_componente ']' '+' FIN CLASE

    '?'  desplazar e ir al estado 332


Estado 300

   41 elemento_enumeracion: IDENTIFICADOR . '[' ":=" expresion ']' '?'

    '['  desplazar e ir al estado 333


Estado 301

   40 tipo_enumerado: ENUMERACION '[' DE tipo_escalar ']' '?' '(' elemento_enumeracion . ')' '+' FIN ENUMERACION

    ')'  desplazar e ir al estado 334


Estado 302

   39 campo: '(' IDENTIFICADOR ')' '+' ':' especificacion_tipo . '[' ":=" expresion ']' '?'

    '['  desplazar e ir al estado 335


Estado 303

  144 expresion_condicional: SI expresion ENTONCES expresion '[' SINO . expresion ']' '?'
  148                      | SI expresion ENTONCES expresion '[' SINO . expresion ']' '?'

    SI   desplazar e ir al estado 122
    '['  desplazar e ir al estado 123

    expresion              ir al estado 336
    expresion_posfija      ir al estado 125
    expresion_binaria      ir al estado 126
    expresion_unaria       ir al estado 127
    expresion_condicional  ir al estado 128


Estado 304

    8 nombre: '[' . IDENTIFICADOR "::" ']' '*' IDENTIFICADOR
  123 expresion_unaria: '[' . '-' ']' '?' primario

    '-'            desplazar e ir al estado 157
    IDENTIFICADOR  desplazar e ir al estado 31


Estado 305

  140 enumeraciones: '[' '(' . expresion ')' '+' ']'

    SI   desplazar e ir al estado 122
    '['  desplazar e ir al estado 123

    expresion              ir al estado 337
    expresion_posfija      ir al estado 125
    expresion_binaria      ir al estado 126
    expresion_unaria       ir al estado 127
    expresion_condicional  ir al estado 128


Estado 306

  104 expresion_binaria: expresion . '[' op_binario ']' expresion
  143 expresion_condicional: expresion .
  147                      | expresion .

    '['  desplazar e ir al estado 158

    '['  [reduce usando la regla 143 (expresion_condicional)]
    '['  [reduce usando la regla 147 (expresion_condicional)]


Estado 307

  126 primario: '[' objeto . ']' '?' llamada_subprograma
  136 objeto: objeto . '.' IDENTIFICADOR
  137       | objeto . '[' '(' expresion ')' '+' ']'
  138       | objeto . '{' '(' CTC_CADENA ')' '+' '}'

    '['  desplazar e ir al estado 171
    ']'  desplazar e ir al estado 338
    '.'  desplazar e ir al estado 181
    '{'  desplazar e ir al estado 182


Estado 308

  102 expresion: expresion_condicional .
  139 enumeraciones: '[' expresion_condicional . '[' clausula_iteracion ']' '+' ']'

    '['  desplazar e ir al estado 339

    '['  [reduce usando la regla 102 (expresion)]


Estado 309

  104 expresion_binaria: expresion . '[' op_binario ']' expresion
  128 primario: '(' expresion . ')'
  143 expresion_condicional: expresion .
  147                      | expresion .

    '['  desplazar e ir al estado 158
    ')'  desplazar e ir al estado 340

    '['  [reduce usando la regla 143 (expresion_condicional)]
    '['  [reduce usando la regla 147 (expresion_condicional)]
    ')'  [reduce usando la regla 143 (expresion_condicional)]
    ')'  [reduce usando la regla 147 (expresion_condicional)]


Estado 310

  141 enumeraciones: '{' '(' . clave_valor ')' '+' '}'
  142              | '{' '(' . campo_valor ')' '+' '}'

    IDENTIFICADOR  desplazar e ir al estado 341

    $default  reduce usando la regla 149 (clave_valor)

    campo_valor  ir al estado 342
    clave_valor  ir al estado 343


Estado 311

   32 tipo_tabla: TABLA '(' expresion ".." expresion ')' DE especificacion_tipo .

    $default  reduce usando la regla 32 (tipo_tabla)


Estado 312

   24 tipo_escalar: '[' SIGNO ']' '?' tipo_basico '[' longitud ']' . '?' '[' RANGO rango ']' '?'

    '?'  desplazar e ir al estado 344


Estado 313

   16 declaracion_objeto: '(' IDENTIFICADOR ')' '+' ':' especificacion_tipo '[' ":=" expresion ']' '?' .

    $default  reduce usando la regla 16 (declaracion_objeto)


Estado 314

   98 clausula_finalmente: FINALMENTE . '[' instruccion ']' '+'

    '['  desplazar e ir al estado 345


Estado 315

   95 clausulas_excepcion: '[' . clausula_excepcion_especifica ']' '*' clausula_excepcion_general

    EXCEPCION  desplazar e ir al estado 346

    clausula_excepcion_especifica  ir al estado 347


Estado 316

   92 instruccion_captura_excepcion: PRUEBA '[' instruccion ']' '+' clausulas . FIN PRUEBA

    FIN  desplazar e ir al estado 348


Estado 317

   93 clausulas: clausulas_excepcion . '[' clausula_finalmente ']' '?'

    '['  desplazar e ir al estado 349


Estado 318

   94 clausulas: clausula_finalmente .

    $default  reduce usando la regla 94 (clausulas)


Estado 319

   86 instruccion_si: SI expresion ENTONCES '[' instruccion ']' . '+' '[' SINO '[' instruccion ']' '+' ']' '?' FIN SI

    '+'  desplazar e ir al estado 350


Estado 320

   90 clausula_iteracion: MIENTRAS . expresion

    SI   desplazar e ir al estado 122
    '['  desplazar e ir al estado 123

    expresion              ir al estado 351
    expresion_posfija      ir al estado 125
    expresion_binaria      ir al estado 126
    expresion_unaria       ir al estado 127
    expresion_condicional  ir al estado 128


Estado 321

   88 clausula_iteracion: PARA . IDENTIFICADOR '[' ':' especificacion_tipo ']' '?' EN expresion

    IDENTIFICADOR  desplazar e ir al estado 352


Estado 322

   89 clausula_iteracion: REPETIR . IDENTIFICADOR '[' ':' especificacion_tipo ']' '?' EN RANGO '[' DESCENDENTE ']' '?'

    IDENTIFICADOR  desplazar e ir al estado 353


Estado 323

   87 instruccion_bucle: '[' IDENTIFICADOR ':' ']' '?' clausula_iteracion . '[' instruccion ']' '+' FIN BUCLE

    '['  desplazar e ir al estado 354


Estado 324

   85 definicion_parametro: '[' IDENTIFICADOR ":=" . ']' '?' expresion

    ']'  desplazar e ir al estado 355


Estado 325

   84 llamada_subprograma: nombre '(' '(' definicion_parametro ')' '*' . ')'

    ')'  desplazar e ir al estado 356


Estado 326

  137 objeto: objeto '[' '(' expresion ')' '+' . ']'

    ']'  desplazar e ir al estado 357


Estado 327

  138 objeto: objeto '{' '(' CTC_CADENA ')' '+' . '}'

    '}'  desplazar e ir al estado 358


Estado 328

   62 modo: REFERENCIA .

    $default  reduce usando la regla 62 (modo)


Estado 329

   61 modo: VALOR .

    $default  reduce usando la regla 61 (modo)


Estado 330

   60 declaracion_parametros: '(' IDENTIFICADOR ')' '+' ':' '[' modo . ']' '?' especificacion_tipo '[' ":=" expresion ']' '?'

    ']'  desplazar e ir al estado 359


Estado 331

   43 superclases: '(' '(' nombre . ')' '+' ')'

    ')'  desplazar e ir al estado 360


Estado 332

   42 clase: CLASE '[' ULTIMA ']' '?' '[' superclases ']' '?' . '[' declaracion_componente ']' '+' FIN CLASE

    '['  desplazar e ir al estado 361


Estado 333

   41 elemento_enumeracion: IDENTIFICADOR '[' . ":=" expresion ']' '?'

    ":="  desplazar e ir al estado 362


Estado 334

   40 tipo_enumerado: ENUMERACION '[' DE tipo_escalar ']' '?' '(' elemento_enumeracion ')' . '+' FIN ENUMERACION

    '+'  desplazar e ir al estado 363


Estado 335

   39 campo: '(' IDENTIFICADOR ')' '+' ':' especificacion_tipo '[' . ":=" expresion ']' '?'

    ":="  desplazar e ir al estado 364


Estado 336

  104 expresion_binaria: expresion . '[' op_binario ']' expresion
  143 expresion_condicional: expresion .
  144                      | SI expresion ENTONCES expresion '[' SINO expresion . ']' '?'
  147                      | expresion .
  148                      | SI expresion ENTONCES expresion '[' SINO expresion . ']' '?'

    '['  desplazar e ir al estado 158
    ']'  desplazar e ir al estado 365

    '['  [reduce usando la regla 143 (expresion_condicional)]
    '['  [reduce usando la regla 147 (expresion_condicional)]
    ']'  [reduce usando la regla 143 (expresion_condicional)]
    ']'  [reduce usando la regla 147 (expresion_condicional)]


Estado 337

  104 expresion_binaria: expresion . '[' op_binario ']' expresion
  140 enumeraciones: '[' '(' expresion . ')' '+' ']'
  143 expresion_condicional: expresion .
  147                      | expresion .

    '['  desplazar e ir al estado 158
    ')'  desplazar e ir al estado 366

    '['  [reduce usando la regla 143 (expresion_condicional)]
    '['  [reduce usando la regla 147 (expresion_condicional)]
    ')'  [reduce usando la regla 143 (expresion_condicional)]
    ')'  [reduce usando la regla 147 (expresion_condicional)]


Estado 338

  126 primario: '[' objeto ']' . '?' llamada_subprograma

    '?'  desplazar e ir al estado 367


Estado 339

  139 enumeraciones: '[' expresion_condicional '[' . clausula_iteracion ']' '+' ']'

    MIENTRAS  desplazar e ir al estado 320
    PARA      desplazar e ir al estado 321
    REPETIR   desplazar e ir al estado 322

    clausula_iteracion  ir al estado 368


Estado 340

  128 primario: '(' expresion ')' .

    $default  reduce usando la regla 128 (primario)


Estado 341

  145 campo_valor: IDENTIFICADOR . "=>" expresion
  146            | IDENTIFICADOR . "=>" expresion

    "=>"  desplazar e ir al estado 369


Estado 342

  142 enumeraciones: '{' '(' campo_valor . ')' '+' '}'

    ')'  desplazar e ir al estado 370


Estado 343

  141 enumeraciones: '{' '(' clave_valor . ')' '+' '}'

    ')'  desplazar e ir al estado 371


Estado 344

   24 tipo_escalar: '[' SIGNO ']' '?' tipo_basico '[' longitud ']' '?' . '[' RANGO rango ']' '?'

    '['  desplazar e ir al estado 372


Estado 345

   98 clausula_finalmente: FINALMENTE '[' . instruccion ']' '+'

    DEVOLVER  desplazar e ir al estado 132
    LANZA     desplazar e ir al estado 133
    PRUEBA    desplazar e ir al estado 134
    SI        desplazar e ir al estado 135
    '['       desplazar e ir al estado 136

    nombre                             ir al estado 137
    instruccion                        ir al estado 373
    instruccion_asignacion             ir al estado 139
    instruccion_devolver               ir al estado 140
    instruccion_llamada                ir al estado 141
    llamada_subprograma                ir al estado 142
    instruccion_si                     ir al estado 143
    instruccion_bucle                  ir al estado 144
    instruccion_lanzamiento_excepcion  ir al estado 145
    instruccion_captura_excepcion      ir al estado 146
    objeto                             ir al estado 147


Estado 346

   96 clausula_excepcion_especifica: EXCEPCION . '(' nombre ')' '[' instruccion ']' '+'

    '('  desplazar e ir al estado 374


Estado 347

   95 clausulas_excepcion: '[' clausula_excepcion_especifica . ']' '*' clausula_excepcion_general

    ']'  desplazar e ir al estado 375


Estado 348

   92 instruccion_captura_excepcion: PRUEBA '[' instruccion ']' '+' clausulas FIN . PRUEBA

    PRUEBA  desplazar e ir al estado 376


Estado 349

   93 clausulas: clausulas_excepcion '[' . clausula_finalmente ']' '?'

    FINALMENTE  desplazar e ir al estado 314

    clausula_finalmente  ir al estado 377


Estado 350

   86 instruccion_si: SI expresion ENTONCES '[' instruccion ']' '+' . '[' SINO '[' instruccion ']' '+' ']' '?' FIN SI

    '['  desplazar e ir al estado 378


Estado 351

   90 clausula_iteracion: MIENTRAS expresion .
  104 expresion_binaria: expresion . '[' op_binario ']' expresion
  143 expresion_condicional: expresion .
  147                      | expresion .

    '['  desplazar e ir al estado 158

    '['       [reduce usando la regla 90 (clausula_iteracion)]
    '['       [reduce usando la regla 143 (expresion_condicional)]
    '['       [reduce usando la regla 147 (expresion_condicional)]
    ']'       reduce usando la regla 90 (clausula_iteracion)
    ']'       [reduce usando la regla 143 (expresion_condicional)]
    ']'       [reduce usando la regla 147 (expresion_condicional)]
    $default  reduce usando la regla 90 (clausula_iteracion)


Estado 352

   88 clausula_iteracion: PARA IDENTIFICADOR . '[' ':' especificacion_tipo ']' '?' EN expresion

    '['  desplazar e ir al estado 379


Estado 353

   89 clausula_iteracion: REPETIR IDENTIFICADOR . '[' ':' especificacion_tipo ']' '?' EN RANGO '[' DESCENDENTE ']' '?'

    '['  desplazar e ir al estado 380


Estado 354

   87 instruccion_bucle: '[' IDENTIFICADOR ':' ']' '?' clausula_iteracion '[' . instruccion ']' '+' FIN BUCLE

    DEVOLVER  desplazar e ir al estado 132
    LANZA     desplazar e ir al estado 133
    PRUEBA    desplazar e ir al estado 134
    SI        desplazar e ir al estado 135
    '['       desplazar e ir al estado 136

    nombre                             ir al estado 137
    instruccion                        ir al estado 381
    instruccion_asignacion             ir al estado 139
    instruccion_devolver               ir al estado 140
    instruccion_llamada                ir al estado 141
    llamada_subprograma                ir al estado 142
    instruccion_si                     ir al estado 143
    instruccion_bucle                  ir al estado 144
    instruccion_lanzamiento_excepcion  ir al estado 145
    instruccion_captura_excepcion      ir al estado 146
    objeto                             ir al estado 147


Estado 355

   85 definicion_parametro: '[' IDENTIFICADOR ":=" ']' . '?' expresion

    '?'  desplazar e ir al estado 382


Estado 356

   84 llamada_subprograma: nombre '(' '(' definicion_parametro ')' '*' ')' .

    $default  reduce usando la regla 84 (llamada_subprograma)


Estado 357

  137 objeto: objeto '[' '(' expresion ')' '+' ']' .

    $default  reduce usando la regla 137 (objeto)


Estado 358

  138 objeto: objeto '{' '(' CTC_CADENA ')' '+' '}' .

    $default  reduce usando la regla 138 (objeto)


Estado 359

   60 declaracion_parametros: '(' IDENTIFICADOR ')' '+' ':' '[' modo ']' . '?' especificacion_tipo '[' ":=" expresion ']' '?'

    '?'  desplazar e ir al estado 383


Estado 360

   43 superclases: '(' '(' nombre ')' . '+' ')'

    '+'  desplazar e ir al estado 384


Estado 361

   42 clase: CLASE '[' ULTIMA ']' '?' '[' superclases ']' '?' '[' . declaracion_componente ']' '+' FIN CLASE

    '['  desplazar e ir al estado 385

    declaracion_componente  ir al estado 386


Estado 362

   41 elemento_enumeracion: IDENTIFICADOR '[' ":=" . expresion ']' '?'

    SI   desplazar e ir al estado 122
    '['  desplazar e ir al estado 123

    expresion              ir al estado 387
    expresion_posfija      ir al estado 125
    expresion_binaria      ir al estado 126
    expresion_unaria       ir al estado 127
    expresion_condicional  ir al estado 128


Estado 363

   40 tipo_enumerado: ENUMERACION '[' DE tipo_escalar ']' '?' '(' elemento_enumeracion ')' '+' . FIN ENUMERACION

    FIN  desplazar e ir al estado 388


Estado 364

   39 campo: '(' IDENTIFICADOR ')' '+' ':' especificacion_tipo '[' ":=" . expresion ']' '?'

    SI   desplazar e ir al estado 122
    '['  desplazar e ir al estado 123

    expresion              ir al estado 389
    expresion_posfija      ir al estado 125
    expresion_binaria      ir al estado 126
    expresion_unaria       ir al estado 127
    expresion_condicional  ir al estado 128


Estado 365

  144 expresion_condicional: SI expresion ENTONCES expresion '[' SINO expresion ']' . '?'
  148                      | SI expresion ENTONCES expresion '[' SINO expresion ']' . '?'

    '?'  desplazar e ir al estado 390


Estado 366

  140 enumeraciones: '[' '(' expresion ')' . '+' ']'

    '+'  desplazar e ir al estado 391


Estado 367

  126 primario: '[' objeto ']' '?' . llamada_subprograma

    '['  desplazar e ir al estado 26

    nombre               ir al estado 392
    llamada_subprograma  ir al estado 393


Estado 368

  139 enumeraciones: '[' expresion_condicional '[' clausula_iteracion . ']' '+' ']'

    ']'  desplazar e ir al estado 394


Estado 369

  145 campo_valor: IDENTIFICADOR "=>" . expresion
  146            | IDENTIFICADOR "=>" . expresion

    SI   desplazar e ir al estado 122
    '['  desplazar e ir al estado 123

    expresion              ir al estado 395
    expresion_posfija      ir al estado 125
    expresion_binaria      ir al estado 126
    expresion_unaria       ir al estado 127
    expresion_condicional  ir al estado 128


Estado 370

  142 enumeraciones: '{' '(' campo_valor ')' . '+' '}'

    '+'  desplazar e ir al estado 396


Estado 371

  141 enumeraciones: '{' '(' clave_valor ')' . '+' '}'

    '+'  desplazar e ir al estado 397


Estado 372

   24 tipo_escalar: '[' SIGNO ']' '?' tipo_basico '[' longitud ']' '?' '[' . RANGO rango ']' '?'

    RANGO  desplazar e ir al estado 398


Estado 373

   98 clausula_finalmente: FINALMENTE '[' instruccion . ']' '+'

    ']'  desplazar e ir al estado 399


Estado 374

   96 clausula_excepcion_especifica: EXCEPCION '(' . nombre ')' '[' instruccion ']' '+'

    '['  desplazar e ir al estado 26

    nombre  ir al estado 400


Estado 375

   95 clausulas_excepcion: '[' clausula_excepcion_especifica ']' . '*' clausula_excepcion_general

    '*'  desplazar e ir al estado 401


Estado 376

   92 instruccion_captura_excepcion: PRUEBA '[' instruccion ']' '+' clausulas FIN PRUEBA .

    $default  reduce usando la regla 92 (instruccion_captura_excepcion)


Estado 377

   93 clausulas: clausulas_excepcion '[' clausula_finalmente . ']' '?'

    ']'  desplazar e ir al estado 402


Estado 378

   86 instruccion_si: SI expresion ENTONCES '[' instruccion ']' '+' '[' . SINO '[' instruccion ']' '+' ']' '?' FIN SI

    SINO  desplazar e ir al estado 403


Estado 379

   88 clausula_iteracion: PARA IDENTIFICADOR '[' . ':' especificacion_tipo ']' '?' EN expresion

    ':'  desplazar e ir al estado 404


Estado 380

   89 clausula_iteracion: REPETIR IDENTIFICADOR '[' . ':' especificacion_tipo ']' '?' EN RANGO '[' DESCENDENTE ']' '?'

    ':'  desplazar e ir al estado 405


Estado 381

   87 instruccion_bucle: '[' IDENTIFICADOR ':' ']' '?' clausula_iteracion '[' instruccion . ']' '+' FIN BUCLE

    ']'  desplazar e ir al estado 406


Estado 382

   85 definicion_parametro: '[' IDENTIFICADOR ":=" ']' '?' . expresion

    SI   desplazar e ir al estado 122
    '['  desplazar e ir al estado 123

    expresion              ir al estado 407
    expresion_posfija      ir al estado 125
    expresion_binaria      ir al estado 126
    expresion_unaria       ir al estado 127
    expresion_condicional  ir al estado 128


Estado 383

   60 declaracion_parametros: '(' IDENTIFICADOR ')' '+' ':' '[' modo ']' '?' . especificacion_tipo '[' ":=" expresion ']' '?'

    DICCIONARIO  desplazar e ir al estado 78
    LISTA        desplazar e ir al estado 80
    TABLA        desplazar e ir al estado 82
    '['          desplazar e ir al estado 114

    nombre                ir al estado 115
    especificacion_tipo   ir al estado 408
    tipo_no_estructurado  ir al estado 117
    tipo_escalar          ir al estado 85
    tipo_tabla            ir al estado 86
    tipo_diccionario      ir al estado 87


Estado 384

   43 superclases: '(' '(' nombre ')' '+' . ')'

    ')'  desplazar e ir al estado 409


Estado 385

   44 declaracion_componente: '[' . visibilidad ']' '?' componente

    PRIVADO    desplazar e ir al estado 410
    PROTEGIDO  desplazar e ir al estado 411
    PUBLICO    desplazar e ir al estado 412

    visibilidad  ir al estado 413


Estado 386

   42 clase: CLASE '[' ULTIMA ']' '?' '[' superclases ']' '?' '[' declaracion_componente . ']' '+' FIN CLASE

    ']'  desplazar e ir al estado 414


Estado 387

   41 elemento_enumeracion: IDENTIFICADOR '[' ":=" expresion . ']' '?'
  104 expresion_binaria: expresion . '[' op_binario ']' expresion
  143 expresion_condicional: expresion .
  147                      | expresion .

    '['  desplazar e ir al estado 158
    ']'  desplazar e ir al estado 415

    '['  [reduce usando la regla 143 (expresion_condicional)]
    '['  [reduce usando la regla 147 (expresion_condicional)]
    ']'  [reduce usando la regla 143 (expresion_condicional)]
    ']'  [reduce usando la regla 147 (expresion_condicional)]


Estado 388

   40 tipo_enumerado: ENUMERACION '[' DE tipo_escalar ']' '?' '(' elemento_enumeracion ')' '+' FIN . ENUMERACION

    ENUMERACION  desplazar e ir al estado 416


Estado 389

   39 campo: '(' IDENTIFICADOR ')' '+' ':' especificacion_tipo '[' ":=" expresion . ']' '?'
  104 expresion_binaria: expresion . '[' op_binario ']' expresion
  143 expresion_condicional: expresion .
  147                      | expresion .

    '['  desplazar e ir al estado 158
    ']'  desplazar e ir al estado 417

    '['  [reduce usando la regla 143 (expresion_condicional)]
    '['  [reduce usando la regla 147 (expresion_condicional)]
    ']'  [reduce usando la regla 143 (expresion_condicional)]
    ']'  [reduce usando la regla 147 (expresion_condicional)]


Estado 390

  144 expresion_condicional: SI expresion ENTONCES expresion '[' SINO expresion ']' '?' .
  148                      | SI expresion ENTONCES expresion '[' SINO expresion ']' '?' .

    ENTONCES  reduce usando la regla 144 (expresion_condicional)
    ENTONCES  [reduce usando la regla 148 (expresion_condicional)]
    ';'       reduce usando la regla 144 (expresion_condicional)
    ';'       [reduce usando la regla 148 (expresion_condicional)]
    '['       reduce usando la regla 144 (expresion_condicional)
    '['       [reduce usando la regla 148 (expresion_condicional)]
    ']'       reduce usando la regla 144 (expresion_condicional)
    ']'       [reduce usando la regla 148 (expresion_condicional)]
    ')'       reduce usando la regla 144 (expresion_condicional)
    ')'       [reduce usando la regla 148 (expresion_condicional)]
    ".."      reduce usando la regla 144 (expresion_condicional)
    ".."      [reduce usando la regla 148 (expresion_condicional)]
    $default  reduce usando la regla 144 (expresion_condicional)


Estado 391

  140 enumeraciones: '[' '(' expresion ')' '+' . ']'

    ']'  desplazar e ir al estado 418


Estado 392

   84 llamada_subprograma: nombre . '(' '(' definicion_parametro ')' '*' ')'

    '('  desplazar e ir al estado 169


Estado 393

  126 primario: '[' objeto ']' '?' llamada_subprograma .

    $default  reduce usando la regla 126 (primario)


Estado 394

  139 enumeraciones: '[' expresion_condicional '[' clausula_iteracion ']' . '+' ']'

    '+'  desplazar e ir al estado 419


Estado 395

  104 expresion_binaria: expresion . '[' op_binario ']' expresion
  143 expresion_condicional: expresion .
  145 campo_valor: IDENTIFICADOR "=>" expresion .
  146            | IDENTIFICADOR "=>" expresion .
  147 expresion_condicional: expresion .

    '['  desplazar e ir al estado 158

    '['       [reduce usando la regla 143 (expresion_condicional)]
    '['       [reduce usando la regla 147 (expresion_condicional)]
    ')'       reduce usando la regla 143 (expresion_condicional)
    ')'       [reduce usando la regla 145 (campo_valor)]
    ')'       [reduce usando la regla 146 (campo_valor)]
    ')'       [reduce usando la regla 147 (expresion_condicional)]
    $default  reduce usando la regla 143 (expresion_condicional)


Estado 396

  142 enumeraciones: '{' '(' campo_valor ')' '+' . '}'

    '}'  desplazar e ir al estado 420


Estado 397

  141 enumeraciones: '{' '(' clave_valor ')' '+' . '}'

    '}'  desplazar e ir al estado 421


Estado 398

   24 tipo_escalar: '[' SIGNO ']' '?' tipo_basico '[' longitud ']' '?' '[' RANGO . rango ']' '?'

    SI   desplazar e ir al estado 122
    '['  desplazar e ir al estado 123

    rango                  ir al estado 422
    expresion              ir al estado 423
    expresion_posfija      ir al estado 125
    expresion_binaria      ir al estado 126
    expresion_unaria       ir al estado 127
    expresion_condicional  ir al estado 128


Estado 399

   98 clausula_finalmente: FINALMENTE '[' instruccion ']' . '+'

    '+'  desplazar e ir al estado 424


Estado 400

   96 clausula_excepcion_especifica: EXCEPCION '(' nombre . ')' '[' instruccion ']' '+'

    ')'  desplazar e ir al estado 425


Estado 401

   95 clausulas_excepcion: '[' clausula_excepcion_especifica ']' '*' . clausula_excepcion_general

    EXCEPCION  desplazar e ir al estado 426

    clausula_excepcion_general  ir al estado 427


Estado 402

   93 clausulas: clausulas_excepcion '[' clausula_finalmente ']' . '?'

    '?'  desplazar e ir al estado 428


Estado 403

   86 instruccion_si: SI expresion ENTONCES '[' instruccion ']' '+' '[' SINO . '[' instruccion ']' '+' ']' '?' FIN SI

    '['  desplazar e ir al estado 429


Estado 404

   88 clausula_iteracion: PARA IDENTIFICADOR '[' ':' . especificacion_tipo ']' '?' EN expresion

    DICCIONARIO  desplazar e ir al estado 78
    LISTA        desplazar e ir al estado 80
    TABLA        desplazar e ir al estado 82
    '['          desplazar e ir al estado 114

    nombre                ir al estado 115
    especificacion_tipo   ir al estado 430
    tipo_no_estructurado  ir al estado 117
    tipo_escalar          ir al estado 85
    tipo_tabla            ir al estado 86
    tipo_diccionario      ir al estado 87


Estado 405

   89 clausula_iteracion: REPETIR IDENTIFICADOR '[' ':' . especificacion_tipo ']' '?' EN RANGO '[' DESCENDENTE ']' '?'

    DICCIONARIO  desplazar e ir al estado 78
    LISTA        desplazar e ir al estado 80
    TABLA        desplazar e ir al estado 82
    '['          desplazar e ir al estado 114

    nombre                ir al estado 115
    especificacion_tipo   ir al estado 431
    tipo_no_estructurado  ir al estado 117
    tipo_escalar          ir al estado 85
    tipo_tabla            ir al estado 86
    tipo_diccionario      ir al estado 87


Estado 406

   87 instruccion_bucle: '[' IDENTIFICADOR ':' ']' '?' clausula_iteracion '[' instruccion ']' . '+' FIN BUCLE

    '+'  desplazar e ir al estado 432


Estado 407

   85 definicion_parametro: '[' IDENTIFICADOR ":=" ']' '?' expresion .
  104 expresion_binaria: expresion . '[' op_binario ']' expresion
  143 expresion_condicional: expresion .
  147                      | expresion .

    '['  desplazar e ir al estado 158

    '['       [reduce usando la regla 143 (expresion_condicional)]
    '['       [reduce usando la regla 147 (expresion_condicional)]
    ')'       reduce usando la regla 85 (definicion_parametro)
    ')'       [reduce usando la regla 143 (expresion_condicional)]
    ')'       [reduce usando la regla 147 (expresion_condicional)]
    $default  reduce usando la regla 85 (definicion_parametro)


Estado 408

   60 declaracion_parametros: '(' IDENTIFICADOR ')' '+' ':' '[' modo ']' '?' especificacion_tipo . '[' ":=" expresion ']' '?'

    '['  desplazar e ir al estado 433


Estado 409

   43 superclases: '(' '(' nombre ')' '+' ')' .

    $default  reduce usando la regla 43 (superclases)


Estado 410

   47 visibilidad: PRIVADO .

    $default  reduce usando la regla 47 (visibilidad)


Estado 411

   46 visibilidad: PROTEGIDO .

    $default  reduce usando la regla 46 (visibilidad)


Estado 412

   45 visibilidad: PUBLICO .

    $default  reduce usando la regla 45 (visibilidad)


Estado 413

   44 declaracion_componente: '[' visibilidad . ']' '?' componente

    ']'  desplazar e ir al estado 434


Estado 414

   42 clase: CLASE '[' ULTIMA ']' '?' '[' superclases ']' '?' '[' declaracion_componente ']' . '+' FIN CLASE

    '+'  desplazar e ir al estado 435


Estado 415

   41 elemento_enumeracion: IDENTIFICADOR '[' ":=" expresion ']' . '?'

    '?'  desplazar e ir al estado 436


Estado 416

   40 tipo_enumerado: ENUMERACION '[' DE tipo_escalar ']' '?' '(' elemento_enumeracion ')' '+' FIN ENUMERACION .

    $default  reduce usando la regla 40 (tipo_enumerado)


Estado 417

   39 campo: '(' IDENTIFICADOR ')' '+' ':' especificacion_tipo '[' ":=" expresion ']' . '?'

    '?'  desplazar e ir al estado 437


Estado 418

  140 enumeraciones: '[' '(' expresion ')' '+' ']' .

    $default  reduce usando la regla 140 (enumeraciones)


Estado 419

  139 enumeraciones: '[' expresion_condicional '[' clausula_iteracion ']' '+' . ']'

    ']'  desplazar e ir al estado 438


Estado 420

  142 enumeraciones: '{' '(' campo_valor ')' '+' '}' .

    $default  reduce usando la regla 142 (enumeraciones)


Estado 421

  141 enumeraciones: '{' '(' clave_valor ')' '+' '}' .

    $default  reduce usando la regla 141 (enumeraciones)


Estado 422

   24 tipo_escalar: '[' SIGNO ']' '?' tipo_basico '[' longitud ']' '?' '[' RANGO rango . ']' '?'

    ']'  desplazar e ir al estado 439


Estado 423

   31 rango: expresion . ".." expresion '[' ".." expresion ']' '?'
  104 expresion_binaria: expresion . '[' op_binario ']' expresion
  143 expresion_condicional: expresion .
  147                      | expresion .

    '['   desplazar e ir al estado 158
    ".."  desplazar e ir al estado 440

    '['   [reduce usando la regla 143 (expresion_condicional)]
    '['   [reduce usando la regla 147 (expresion_condicional)]
    ".."  [reduce usando la regla 143 (expresion_condicional)]
    ".."  [reduce usando la regla 147 (expresion_condicional)]


Estado 424

   98 clausula_finalmente: FINALMENTE '[' instruccion ']' '+' .

    $default  reduce usando la regla 98 (clausula_finalmente)


Estado 425

   96 clausula_excepcion_especifica: EXCEPCION '(' nombre ')' . '[' instruccion ']' '+'

    '['  desplazar e ir al estado 441


Estado 426

   97 clausula_excepcion_general: EXCEPCION . '[' instruccion ']' '+'

    '['  desplazar e ir al estado 442


Estado 427

   95 clausulas_excepcion: '[' clausula_excepcion_especifica ']' '*' clausula_excepcion_general .

    $default  reduce usando la regla 95 (clausulas_excepcion)


Estado 428

   93 clausulas: clausulas_excepcion '[' clausula_finalmente ']' '?' .

    $default  reduce usando la regla 93 (clausulas)


Estado 429

   86 instruccion_si: SI expresion ENTONCES '[' instruccion ']' '+' '[' SINO '[' . instruccion ']' '+' ']' '?' FIN SI

    DEVOLVER  desplazar e ir al estado 132
    LANZA     desplazar e ir al estado 133
    PRUEBA    desplazar e ir al estado 134
    SI        desplazar e ir al estado 135
    '['       desplazar e ir al estado 136

    nombre                             ir al estado 137
    instruccion                        ir al estado 443
    instruccion_asignacion             ir al estado 139
    instruccion_devolver               ir al estado 140
    instruccion_llamada                ir al estado 141
    llamada_subprograma                ir al estado 142
    instruccion_si                     ir al estado 143
    instruccion_bucle                  ir al estado 144
    instruccion_lanzamiento_excepcion  ir al estado 145
    instruccion_captura_excepcion      ir al estado 146
    objeto                             ir al estado 147


Estado 430

   88 clausula_iteracion: PARA IDENTIFICADOR '[' ':' especificacion_tipo . ']' '?' EN expresion

    ']'  desplazar e ir al estado 444


Estado 431

   89 clausula_iteracion: REPETIR IDENTIFICADOR '[' ':' especificacion_tipo . ']' '?' EN RANGO '[' DESCENDENTE ']' '?'

    ']'  desplazar e ir al estado 445


Estado 432

   87 instruccion_bucle: '[' IDENTIFICADOR ':' ']' '?' clausula_iteracion '[' instruccion ']' '+' . FIN BUCLE

    FIN  desplazar e ir al estado 446


Estado 433

   60 declaracion_parametros: '(' IDENTIFICADOR ')' '+' ':' '[' modo ']' '?' especificacion_tipo '[' . ":=" expresion ']' '?'

    ":="  desplazar e ir al estado 447


Estado 434

   44 declaracion_componente: '[' visibilidad ']' . '?' componente

    '?'  desplazar e ir al estado 448


Estado 435

   42 clase: CLASE '[' ULTIMA ']' '?' '[' superclases ']' '?' '[' declaracion_componente ']' '+' . FIN CLASE

    FIN  desplazar e ir al estado 449


Estado 436

   41 elemento_enumeracion: IDENTIFICADOR '[' ":=" expresion ']' '?' .

    $default  reduce usando la regla 41 (elemento_enumeracion)


Estado 437

   39 campo: '(' IDENTIFICADOR ')' '+' ':' especificacion_tipo '[' ":=" expresion ']' '?' .

    $default  reduce usando la regla 39 (campo)


Estado 438

  139 enumeraciones: '[' expresion_condicional '[' clausula_iteracion ']' '+' ']' .

    $default  reduce usando la regla 139 (enumeraciones)


Estado 439

   24 tipo_escalar: '[' SIGNO ']' '?' tipo_basico '[' longitud ']' '?' '[' RANGO rango ']' . '?'

    '?'  desplazar e ir al estado 450


Estado 440

   31 rango: expresion ".." . expresion '[' ".." expresion ']' '?'

    SI   desplazar e ir al estado 122
    '['  desplazar e ir al estado 123

    expresion              ir al estado 451
    expresion_posfija      ir al estado 125
    expresion_binaria      ir al estado 126
    expresion_unaria       ir al estado 127
    expresion_condicional  ir al estado 128


Estado 441

   96 clausula_excepcion_especifica: EXCEPCION '(' nombre ')' '[' . instruccion ']' '+'

    DEVOLVER  desplazar e ir al estado 132
    LANZA     desplazar e ir al estado 133
    PRUEBA    desplazar e ir al estado 134
    SI        desplazar e ir al estado 135
    '['       desplazar e ir al estado 136

    nombre                             ir al estado 137
    instruccion                        ir al estado 452
    instruccion_asignacion             ir al estado 139
    instruccion_devolver               ir al estado 140
    instruccion_llamada                ir al estado 141
    llamada_subprograma                ir al estado 142
    instruccion_si                     ir al estado 143
    instruccion_bucle                  ir al estado 144
    instruccion_lanzamiento_excepcion  ir al estado 145
    instruccion_captura_excepcion      ir al estado 146
    objeto                             ir al estado 147


Estado 442

   97 clausula_excepcion_general: EXCEPCION '[' . instruccion ']' '+'

    DEVOLVER  desplazar e ir al estado 132
    LANZA     desplazar e ir al estado 133
    PRUEBA    desplazar e ir al estado 134
    SI        desplazar e ir al estado 135
    '['       desplazar e ir al estado 136

    nombre                             ir al estado 137
    instruccion                        ir al estado 453
    instruccion_asignacion             ir al estado 139
    instruccion_devolver               ir al estado 140
    instruccion_llamada                ir al estado 141
    llamada_subprograma                ir al estado 142
    instruccion_si                     ir al estado 143
    instruccion_bucle                  ir al estado 144
    instruccion_lanzamiento_excepcion  ir al estado 145
    instruccion_captura_excepcion      ir al estado 146
    objeto                             ir al estado 147


Estado 443

   86 instruccion_si: SI expresion ENTONCES '[' instruccion ']' '+' '[' SINO '[' instruccion . ']' '+' ']' '?' FIN SI

    ']'  desplazar e ir al estado 454


Estado 444

   88 clausula_iteracion: PARA IDENTIFICADOR '[' ':' especificacion_tipo ']' . '?' EN expresion

    '?'  desplazar e ir al estado 455


Estado 445

   89 clausula_iteracion: REPETIR IDENTIFICADOR '[' ':' especificacion_tipo ']' . '?' EN RANGO '[' DESCENDENTE ']' '?'

    '?'  desplazar e ir al estado 456


Estado 446

   87 instruccion_bucle: '[' IDENTIFICADOR ':' ']' '?' clausula_iteracion '[' instruccion ']' '+' FIN . BUCLE

    BUCLE  desplazar e ir al estado 457


Estado 447

   60 declaracion_parametros: '(' IDENTIFICADOR ')' '+' ':' '[' modo ']' '?' especificacion_tipo '[' ":=" . expresion ']' '?'

    SI   desplazar e ir al estado 122
    '['  desplazar e ir al estado 123

    expresion              ir al estado 458
    expresion_posfija      ir al estado 125
    expresion_binaria      ir al estado 126
    expresion_unaria       ir al estado 127
    expresion_condicional  ir al estado 128


Estado 448

   44 declaracion_componente: '[' visibilidad ']' '?' . componente

    TIPO  desplazar e ir al estado 43
    '('   desplazar e ir al estado 459

    declaracion_objeto  ir al estado 460
    declaracion_tipo    ir al estado 461
    componente          ir al estado 462


Estado 449

   42 clase: CLASE '[' ULTIMA ']' '?' '[' superclases ']' '?' '[' declaracion_componente ']' '+' FIN . CLASE

    CLASE  desplazar e ir al estado 463


Estado 450

   24 tipo_escalar: '[' SIGNO ']' '?' tipo_basico '[' longitud ']' '?' '[' RANGO rango ']' '?' .

    $default  reduce usando la regla 24 (tipo_escalar)


Estado 451

   31 rango: expresion ".." expresion . '[' ".." expresion ']' '?'
  104 expresion_binaria: expresion . '[' op_binario ']' expresion
  143 expresion_condicional: expresion .
  147                      | expresion .

    '['  desplazar e ir al estado 464

    '['  [reduce usando la regla 143 (expresion_condicional)]
    '['  [reduce usando la regla 147 (expresion_condicional)]


Estado 452

   96 clausula_excepcion_especifica: EXCEPCION '(' nombre ')' '[' instruccion . ']' '+'

    ']'  desplazar e ir al estado 465


Estado 453

   97 clausula_excepcion_general: EXCEPCION '[' instruccion . ']' '+'

    ']'  desplazar e ir al estado 466


Estado 454

   86 instruccion_si: SI expresion ENTONCES '[' instruccion ']' '+' '[' SINO '[' instruccion ']' . '+' ']' '?' FIN SI

    '+'  desplazar e ir al estado 467


Estado 455

   88 clausula_iteracion: PARA IDENTIFICADOR '[' ':' especificacion_tipo ']' '?' . EN expresion

    EN  desplazar e ir al estado 468


Estado 456

   89 clausula_iteracion: REPETIR IDENTIFICADOR '[' ':' especificacion_tipo ']' '?' . EN RANGO '[' DESCENDENTE ']' '?'

    EN  desplazar e ir al estado 469


Estado 457

   87 instruccion_bucle: '[' IDENTIFICADOR ':' ']' '?' clausula_iteracion '[' instruccion ']' '+' FIN BUCLE .

    $default  reduce usando la regla 87 (instruccion_bucle)


Estado 458

   60 declaracion_parametros: '(' IDENTIFICADOR ')' '+' ':' '[' modo ']' '?' especificacion_tipo '[' ":=" expresion . ']' '?'
  104 expresion_binaria: expresion . '[' op_binario ']' expresion
  143 expresion_condicional: expresion .
  147                      | expresion .

    '['  desplazar e ir al estado 158
    ']'  desplazar e ir al estado 470

    '['  [reduce usando la regla 143 (expresion_condicional)]
    '['  [reduce usando la regla 147 (expresion_condicional)]
    ']'  [reduce usando la regla 143 (expresion_condicional)]
    ']'  [reduce usando la regla 147 (expresion_condicional)]


Estado 459

   15 declaracion_objeto: '(' . IDENTIFICADOR ')' '+' ':' CONSTANTE especificacion_tipo ":=" expresion ';'
   16                   | '(' . IDENTIFICADOR ')' '+' ':' especificacion_tipo '[' ":=" expresion ']' '?'
   50 componente: '(' . modificador ')' '*' declaracion_subprograma

    ABSTRACTO      desplazar e ir al estado 471
    CONSTRUCTOR    desplazar e ir al estado 472
    DESTRUCTOR     desplazar e ir al estado 473
    ESPECIFICO     desplazar e ir al estado 474
    FINAL          desplazar e ir al estado 475
    GENERICO       desplazar e ir al estado 476
    IDENTIFICADOR  desplazar e ir al estado 57

    modificador  ir al estado 477


Estado 460

   49 componente: declaracion_objeto .

    $default  reduce usando la regla 49 (componente)


Estado 461

   48 componente: declaracion_tipo .

    $default  reduce usando la regla 48 (componente)


Estado 462

   44 declaracion_componente: '[' visibilidad ']' '?' componente .

    $default  reduce usando la regla 44 (declaracion_componente)


Estado 463

   42 clase: CLASE '[' ULTIMA ']' '?' '[' superclases ']' '?' '[' declaracion_componente ']' '+' FIN CLASE .

    $default  reduce usando la regla 42 (clase)


Estado 464

   31 rango: expresion ".." expresion '[' . ".." expresion ']' '?'
  104 expresion_binaria: expresion '[' . op_binario ']' expresion

    '<'    desplazar e ir al estado 194
    '>'    desplazar e ir al estado 195
    '+'    desplazar e ir al estado 196
    '-'    desplazar e ir al estado 197
    '*'    desplazar e ir al estado 198
    '^'    desplazar e ir al estado 199
    ".."   desplazar e ir al estado 478
    "\\/"  desplazar e ir al estado 200
    "/\\"  desplazar e ir al estado 201
    "<="   desplazar e ir al estado 202
    ">="   desplazar e ir al estado 203
    '='    desplazar e ir al estado 204
    "~="   desplazar e ir al estado 205
    "<-"   desplazar e ir al estado 206
    "->"   desplazar e ir al estado 207
    "/"    desplazar e ir al estado 208
    "\\"   desplazar e ir al estado 209

    op_binario  ir al estado 210


Estado 465

   96 clausula_excepcion_especifica: EXCEPCION '(' nombre ')' '[' instruccion ']' . '+'

    '+'  desplazar e ir al estado 479


Estado 466

   97 clausula_excepcion_general: EXCEPCION '[' instruccion ']' . '+'

    '+'  desplazar e ir al estado 480


Estado 467

   86 instruccion_si: SI expresion ENTONCES '[' instruccion ']' '+' '[' SINO '[' instruccion ']' '+' . ']' '?' FIN SI

    ']'  desplazar e ir al estado 481


Estado 468

   88 clausula_iteracion: PARA IDENTIFICADOR '[' ':' especificacion_tipo ']' '?' EN . expresion

    SI   desplazar e ir al estado 122
    '['  desplazar e ir al estado 123

    expresion              ir al estado 482
    expresion_posfija      ir al estado 125
    expresion_binaria      ir al estado 126
    expresion_unaria       ir al estado 127
    expresion_condicional  ir al estado 128


Estado 469

   89 clausula_iteracion: REPETIR IDENTIFICADOR '[' ':' especificacion_tipo ']' '?' EN . RANGO '[' DESCENDENTE ']' '?'

    RANGO  desplazar e ir al estado 483


Estado 470

   60 declaracion_parametros: '(' IDENTIFICADOR ')' '+' ':' '[' modo ']' '?' especificacion_tipo '[' ":=" expresion ']' . '?'

    '?'  desplazar e ir al estado 484


Estado 471

   54 modificador: ABSTRACTO .

    $default  reduce usando la regla 54 (modificador)


Estado 472

   51 modificador: CONSTRUCTOR .

    $default  reduce usando la regla 51 (modificador)


Estado 473

   52 modificador: DESTRUCTOR .

    $default  reduce usando la regla 52 (modificador)


Estado 474

   55 modificador: ESPECIFICO .

    $default  reduce usando la regla 55 (modificador)


Estado 475

   56 modificador: FINAL .

    $default  reduce usando la regla 56 (modificador)


Estado 476

   53 modificador: GENERICO .

    $default  reduce usando la regla 53 (modificador)


Estado 477

   50 componente: '(' modificador . ')' '*' declaracion_subprograma

    ')'  desplazar e ir al estado 485


Estado 478

   31 rango: expresion ".." expresion '[' ".." . expresion ']' '?'

    SI   desplazar e ir al estado 122
    '['  desplazar e ir al estado 123

    expresion              ir al estado 486
    expresion_posfija      ir al estado 125
    expresion_binaria      ir al estado 126
    expresion_unaria       ir al estado 127
    expresion_condicional  ir al estado 128


Estado 479

   96 clausula_excepcion_especifica: EXCEPCION '(' nombre ')' '[' instruccion ']' '+' .

    $default  reduce usando la regla 96 (clausula_excepcion_especifica)


Estado 480

   97 clausula_excepcion_general: EXCEPCION '[' instruccion ']' '+' .

    $default  reduce usando la regla 97 (clausula_excepcion_general)


Estado 481

   86 instruccion_si: SI expresion ENTONCES '[' instruccion ']' '+' '[' SINO '[' instruccion ']' '+' ']' . '?' FIN SI

    '?'  desplazar e ir al estado 487


Estado 482

   88 clausula_iteracion: PARA IDENTIFICADOR '[' ':' especificacion_tipo ']' '?' EN expresion .
  104 expresion_binaria: expresion . '[' op_binario ']' expresion
  143 expresion_condicional: expresion .
  147                      | expresion .

    '['  desplazar e ir al estado 158

    '['       [reduce usando la regla 88 (clausula_iteracion)]
    '['       [reduce usando la regla 143 (expresion_condicional)]
    '['       [reduce usando la regla 147 (expresion_condicional)]
    ']'       reduce usando la regla 88 (clausula_iteracion)
    ']'       [reduce usando la regla 143 (expresion_condicional)]
    ']'       [reduce usando la regla 147 (expresion_condicional)]
    $default  reduce usando la regla 88 (clausula_iteracion)


Estado 483

   89 clausula_iteracion: REPETIR IDENTIFICADOR '[' ':' especificacion_tipo ']' '?' EN RANGO . '[' DESCENDENTE ']' '?'

    '['  desplazar e ir al estado 488


Estado 484

   60 declaracion_parametros: '(' IDENTIFICADOR ')' '+' ':' '[' modo ']' '?' especificacion_tipo '[' ":=" expresion ']' '?' .

    $default  reduce usando la regla 60 (declaracion_parametros)


Estado 485

   50 componente: '(' modificador ')' . '*' declaracion_subprograma

    '*'  desplazar e ir al estado 489


Estado 486

   31 rango: expresion ".." expresion '[' ".." expresion . ']' '?'
  104 expresion_binaria: expresion . '[' op_binario ']' expresion
  143 expresion_condicional: expresion .
  147                      | expresion .

    '['  desplazar e ir al estado 158
    ']'  desplazar e ir al estado 490

    '['  [reduce usando la regla 143 (expresion_condicional)]
    '['  [reduce usando la regla 147 (expresion_condicional)]
    ']'  [reduce usando la regla 143 (expresion_condicional)]
    ']'  [reduce usando la regla 147 (expresion_condicional)]


Estado 487

   86 instruccion_si: SI expresion ENTONCES '[' instruccion ']' '+' '[' SINO '[' instruccion ']' '+' ']' '?' . FIN SI

    FIN  desplazar e ir al estado 491


Estado 488

   89 clausula_iteracion: REPETIR IDENTIFICADOR '[' ':' especificacion_tipo ']' '?' EN RANGO '[' . DESCENDENTE ']' '?'

    DESCENDENTE  desplazar e ir al estado 492


Estado 489

   50 componente: '(' modificador ')' '*' . declaracion_subprograma

    SUBPROGRAMA  desplazar e ir al estado 42

    declaracion_subprograma  ir al estado 493


Estado 490

   31 rango: expresion ".." expresion '[' ".." expresion ']' . '?'

    '?'  desplazar e ir al estado 494


Estado 491

   86 instruccion_si: SI expresion ENTONCES '[' instruccion ']' '+' '[' SINO '[' instruccion ']' '+' ']' '?' FIN . SI

    SI  desplazar e ir al estado 495


Estado 492

   89 clausula_iteracion: REPETIR IDENTIFICADOR '[' ':' especificacion_tipo ']' '?' EN RANGO '[' DESCENDENTE . ']' '?'

    ']'  desplazar e ir al estado 496


Estado 493

   50 componente: '(' modificador ')' '*' declaracion_subprograma .

    $default  reduce usando la regla 50 (componente)


Estado 494

   31 rango: expresion ".." expresion '[' ".." expresion ']' '?' .

    $default  reduce usando la regla 31 (rango)


Estado 495

   86 instruccion_si: SI expresion ENTONCES '[' instruccion ']' '+' '[' SINO '[' instruccion ']' '+' ']' '?' FIN SI .

    $default  reduce usando la regla 86 (instruccion_si)


Estado 496

   89 clausula_iteracion: REPETIR IDENTIFICADOR '[' ':' especificacion_tipo ']' '?' EN RANGO '[' DESCENDENTE ']' . '?'

    '?'  desplazar e ir al estado 497


Estado 497

   89 clausula_iteracion: REPETIR IDENTIFICADOR '[' ':' especificacion_tipo ']' '?' EN RANGO '[' DESCENDENTE ']' '?' .

    $default  reduce usando la regla 89 (clausula_iteracion)
